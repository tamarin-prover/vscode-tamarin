{
  "version": 3,
  "sources": ["../node_modules/web-tree-sitter/tree-sitter.js", "../server/src/server.ts", "../server/src/features/syntax_errors.ts", "../server/src/features/checks/utils.ts", "../server/node_modules/vscode-languageserver-types/lib/esm/main.js", "../server/src/symbol_table/tamarinTypes.ts", "../server/src/symbol_table/utils.ts", "../server/src/symbol_table/tamarinConstants.ts", "../server/src/features/checks/checkReservedFacts.ts", "../server/src/symbol_table/create_symbol_table.ts", "../server/src/features/checks/checkVariableTypes.ts", "../server/src/features/checks/checkVariableScope.ts", "../server/src/features/checks/checkActionFacts.ts", "../server/src/features/checks/checkArity.ts", "../server/src/features/checks/checkFreeTerms.ts", "../server/src/features/checks/checkMacrosInEquations.ts", "../server/src/features/checks/checkInfixOperators.ts", "../server/src/features/checks/checkSpelling.ts", "../server/src/features/checks/index.ts", "../server/src/AnalysisManager.ts"],
  "sourcesContent": ["var Module=void 0!==Module?Module:{},TreeSitter=function(){var initPromise,document=\"object\"==typeof window?{currentScript:window.document.currentScript}:null;class Parser{constructor(){this.initialize()}initialize(){throw new Error(\"cannot construct a Parser before calling `init()`\")}static init(moduleOptions){return initPromise||(Module=Object.assign({},Module,moduleOptions),initPromise=new Promise((resolveInitPromise=>{var moduleOverrides=Object.assign({},Module),arguments_=[],thisProgram=\"./this.program\",quit_=(e,t)=>{throw t},ENVIRONMENT_IS_WEB=\"object\"==typeof window,ENVIRONMENT_IS_WORKER=\"function\"==typeof importScripts,ENVIRONMENT_IS_NODE=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,scriptDirectory=\"\",read_,readAsync,readBinary;function locateFile(e){return Module.locateFile?Module.locateFile(e,scriptDirectory):scriptDirectory+e}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\"),nodePath=require(\"path\");scriptDirectory=ENVIRONMENT_IS_WORKER?nodePath.dirname(scriptDirectory)+\"/\":__dirname+\"/\",read_=(e,t)=>(e=isFileURI(e)?new URL(e):nodePath.normalize(e),fs.readFileSync(e,t?void 0:\"utf8\")),readBinary=e=>{var t=read_(e,!0);return t.buffer||(t=new Uint8Array(t)),t},readAsync=(e,t,_,s=!0)=>{e=isFileURI(e)?new URL(e):nodePath.normalize(e),fs.readFile(e,s?void 0:\"utf8\",((e,r)=>{e?_(e):t(s?r.buffer:r)}))},!Module.thisProgram&&process.argv.length>1&&(thisProgram=process.argv[1].replace(/\\\\/g,\"/\")),arguments_=process.argv.slice(2),\"undefined\"!=typeof module&&(module.exports=Module),quit_=(e,t)=>{throw process.exitCode=e,t}}else(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&(ENVIRONMENT_IS_WORKER?scriptDirectory=self.location.href:void 0!==document&&document.currentScript&&(scriptDirectory=document.currentScript.src),scriptDirectory=scriptDirectory.startsWith(\"blob:\")?\"\":scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1),read_=e=>{var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},ENVIRONMENT_IS_WORKER&&(readBinary=e=>{var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),readAsync=(e,t,_)=>{var s=new XMLHttpRequest;s.open(\"GET\",e,!0),s.responseType=\"arraybuffer\",s.onload=()=>{200==s.status||0==s.status&&s.response?t(s.response):_()},s.onerror=_,s.send(null)});var out=Module.print||console.log.bind(console),err=Module.printErr||console.error.bind(console);Object.assign(Module,moduleOverrides),moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit);var dynamicLibraries=Module.dynamicLibraries||[],wasmBinary,wasmMemory;Module.wasmBinary&&(wasmBinary=Module.wasmBinary),\"object\"!=typeof WebAssembly&&abort(\"no native wasm support detected\");var ABORT=!1,EXITSTATUS,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var e=wasmMemory.buffer;Module.HEAP8=HEAP8=new Int8Array(e),Module.HEAP16=HEAP16=new Int16Array(e),Module.HEAPU8=HEAPU8=new Uint8Array(e),Module.HEAPU16=HEAPU16=new Uint16Array(e),Module.HEAP32=HEAP32=new Int32Array(e),Module.HEAPU32=HEAPU32=new Uint32Array(e),Module.HEAPF32=HEAPF32=new Float32Array(e),Module.HEAPF64=HEAPF64=new Float64Array(e)}var INITIAL_MEMORY=Module.INITIAL_MEMORY||33554432;wasmMemory=Module.wasmMemory?Module.wasmMemory:new WebAssembly.Memory({initial:INITIAL_MEMORY/65536,maximum:32768}),updateMemoryViews(),INITIAL_MEMORY=wasmMemory.buffer.byteLength;var __ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATPOSTRUN__=[],__RELOC_FUNCS__=[],runtimeInitialized=!1;function preRun(){if(Module.preRun)for(\"function\"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=!0,callRuntimeCallbacks(__RELOC_FUNCS__),callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module.postRun)for(\"function\"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(e){__ATPRERUN__.unshift(e)}function addOnInit(e){__ATINIT__.unshift(e)}function addOnPostRun(e){__ATPOSTRUN__.unshift(e)}var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function getUniqueRunDependency(e){return e}function addRunDependency(e){runDependencies++,Module.monitorRunDependencies?.(runDependencies)}function removeRunDependency(e){if(runDependencies--,Module.monitorRunDependencies?.(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)){var t=dependenciesFulfilled;dependenciesFulfilled=null,t()}}function abort(e){throw Module.onAbort?.(e),err(e=\"Aborted(\"+e+\")\"),ABORT=!0,EXITSTATUS=1,e+=\". Build with -sASSERTIONS for more info.\",new WebAssembly.RuntimeError(e)}var dataURIPrefix=\"data:application/octet-stream;base64,\",isDataURI=e=>e.startsWith(dataURIPrefix),isFileURI=e=>e.startsWith(\"file://\"),wasmBinaryFile;function getBinarySync(e){if(e==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(e);throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(e){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(\"function\"==typeof fetch&&!isFileURI(e))return fetch(e,{credentials:\"same-origin\"}).then((t=>{if(!t.ok)throw`failed to load wasm binary file at '${e}'`;return t.arrayBuffer()})).catch((()=>getBinarySync(e)));if(readAsync)return new Promise(((t,_)=>{readAsync(e,(e=>t(new Uint8Array(e))),_)}))}return Promise.resolve().then((()=>getBinarySync(e)))}function instantiateArrayBuffer(e,t,_){return getBinaryPromise(e).then((e=>WebAssembly.instantiate(e,t))).then(_,(e=>{err(`failed to asynchronously prepare wasm: ${e}`),abort(e)}))}function instantiateAsync(e,t,_,s){return e||\"function\"!=typeof WebAssembly.instantiateStreaming||isDataURI(t)||isFileURI(t)||ENVIRONMENT_IS_NODE||\"function\"!=typeof fetch?instantiateArrayBuffer(t,_,s):fetch(t,{credentials:\"same-origin\"}).then((e=>WebAssembly.instantiateStreaming(e,_).then(s,(function(e){return err(`wasm streaming compile failed: ${e}`),err(\"falling back to ArrayBuffer instantiation\"),instantiateArrayBuffer(t,_,s)}))))}function createWasm(){var e={env:wasmImports,wasi_snapshot_preview1:wasmImports,\"GOT.mem\":new Proxy(wasmImports,GOTHandler),\"GOT.func\":new Proxy(wasmImports,GOTHandler)};function t(e,t){wasmExports=e.exports,wasmExports=relocateExports(wasmExports,1024);var _=getDylinkMetadata(t);return _.neededDynlibs&&(dynamicLibraries=_.neededDynlibs.concat(dynamicLibraries)),mergeLibSymbols(wasmExports,\"main\"),LDSO.init(),loadDylibs(),addOnInit(wasmExports.__wasm_call_ctors),__RELOC_FUNCS__.push(wasmExports.__wasm_apply_data_relocs),removeRunDependency(\"wasm-instantiate\"),wasmExports}if(addRunDependency(\"wasm-instantiate\"),Module.instantiateWasm)try{return Module.instantiateWasm(e,t)}catch(e){return err(`Module.instantiateWasm callback failed with error: ${e}`),!1}return instantiateAsync(wasmBinary,wasmBinaryFile,e,(function(e){t(e.instance,e.module)})),{}}wasmBinaryFile=\"tree-sitter.wasm\",isDataURI(wasmBinaryFile)||(wasmBinaryFile=locateFile(wasmBinaryFile));var ASM_CONSTS={};function ExitStatus(e){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${e})`,this.status=e}var GOT={},currentModuleWeakSymbols=new Set([]),GOTHandler={get(e,t){var _=GOT[t];return _||(_=GOT[t]=new WebAssembly.Global({value:\"i32\",mutable:!0})),currentModuleWeakSymbols.has(t)||(_.required=!0),_}},callRuntimeCallbacks=e=>{for(;e.length>0;)e.shift()(Module)},UTF8Decoder=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,UTF8ArrayToString=(e,t,_)=>{for(var s=t+_,r=t;e[r]&&!(r>=s);)++r;if(r-t>16&&e.buffer&&UTF8Decoder)return UTF8Decoder.decode(e.subarray(t,r));for(var a=\"\";t<r;){var o=e[t++];if(128&o){var n=63&e[t++];if(192!=(224&o)){var l=63&e[t++];if((o=224==(240&o)?(15&o)<<12|n<<6|l:(7&o)<<18|n<<12|l<<6|63&e[t++])<65536)a+=String.fromCharCode(o);else{var d=o-65536;a+=String.fromCharCode(55296|d>>10,56320|1023&d)}}else a+=String.fromCharCode((31&o)<<6|n)}else a+=String.fromCharCode(o)}return a},getDylinkMetadata=e=>{var t=0,_=0;function s(){for(var _=0,s=1;;){var r=e[t++];if(_+=(127&r)*s,s*=128,!(128&r))break}return _}function r(){var _=s();return UTF8ArrayToString(e,(t+=_)-_,_)}function a(e,t){if(e)throw new Error(t)}var o=\"dylink.0\";if(e instanceof WebAssembly.Module){var n=WebAssembly.Module.customSections(e,o);0===n.length&&(o=\"dylink\",n=WebAssembly.Module.customSections(e,o)),a(0===n.length,\"need dylink section\"),_=(e=new Uint8Array(n[0])).length}else{a(!(1836278016==new Uint32Array(new Uint8Array(e.subarray(0,24)).buffer)[0]),\"need to see wasm magic number\"),a(0!==e[8],\"need the dylink section to be first\"),t=9;var l=s();_=t+l,o=r()}var d={neededDynlibs:[],tlsExports:new Set,weakImports:new Set};if(\"dylink\"==o){d.memorySize=s(),d.memoryAlign=s(),d.tableSize=s(),d.tableAlign=s();for(var u=s(),m=0;m<u;++m){var c=r();d.neededDynlibs.push(c)}}else{a(\"dylink.0\"!==o);for(;t<_;){var w=e[t++],p=s();if(1===w)d.memorySize=s(),d.memoryAlign=s(),d.tableSize=s(),d.tableAlign=s();else if(2===w)for(u=s(),m=0;m<u;++m)c=r(),d.neededDynlibs.push(c);else if(3===w)for(var h=s();h--;){var g=r();256&s()&&d.tlsExports.add(g)}else if(4===w)for(h=s();h--;){r(),g=r();1==(3&s())&&d.weakImports.add(g)}else t+=p}}return d};function getValue(e,t=\"i8\"){switch(t.endsWith(\"*\")&&(t=\"*\"),t){case\"i1\":case\"i8\":return HEAP8[e];case\"i16\":return HEAP16[e>>1];case\"i32\":return HEAP32[e>>2];case\"i64\":abort(\"to do getValue(i64) use WASM_BIGINT\");case\"float\":return HEAPF32[e>>2];case\"double\":return HEAPF64[e>>3];case\"*\":return HEAPU32[e>>2];default:abort(`invalid type for getValue: ${t}`)}}var newDSO=(e,t,_)=>{var s={refcount:1/0,name:e,exports:_,global:!0};return LDSO.loadedLibsByName[e]=s,null!=t&&(LDSO.loadedLibsByHandle[t]=s),s},LDSO={loadedLibsByName:{},loadedLibsByHandle:{},init(){newDSO(\"__main__\",0,wasmImports)}},___heap_base=78096,zeroMemory=(e,t)=>(HEAPU8.fill(0,e,e+t),e),alignMemory=(e,t)=>Math.ceil(e/t)*t,getMemory=e=>{if(runtimeInitialized)return zeroMemory(_malloc(e),e);var t=___heap_base,_=t+alignMemory(e,16);return ___heap_base=_,GOT.__heap_base.value=_,t},isInternalSym=e=>[\"__cpp_exception\",\"__c_longjmp\",\"__wasm_apply_data_relocs\",\"__dso_handle\",\"__tls_size\",\"__tls_align\",\"__set_stack_limits\",\"_emscripten_tls_init\",\"__wasm_init_tls\",\"__wasm_call_ctors\",\"__start_em_asm\",\"__stop_em_asm\",\"__start_em_js\",\"__stop_em_js\"].includes(e)||e.startsWith(\"__em_js__\"),uleb128Encode=(e,t)=>{e<128?t.push(e):t.push(e%128|128,e>>7)},sigToWasmTypes=e=>{for(var t={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",e:\"externref\",p:\"i32\"},_={parameters:[],results:\"v\"==e[0]?[]:[t[e[0]]]},s=1;s<e.length;++s)_.parameters.push(t[e[s]]);return _},generateFuncType=(e,t)=>{var _=e.slice(0,1),s=e.slice(1),r={i:127,p:127,j:126,f:125,d:124,e:111};t.push(96),uleb128Encode(s.length,t);for(var a=0;a<s.length;++a)t.push(r[s[a]]);\"v\"==_?t.push(0):t.push(1,r[_])},convertJsFunctionToWasm=(e,t)=>{if(\"function\"==typeof WebAssembly.Function)return new WebAssembly.Function(sigToWasmTypes(t),e);var _=[1];generateFuncType(t,_);var s=[0,97,115,109,1,0,0,0,1];uleb128Encode(_.length,s),s.push(..._),s.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var r=new WebAssembly.Module(new Uint8Array(s));return new WebAssembly.Instance(r,{e:{f:e}}).exports.f},wasmTableMirror=[],wasmTable=new WebAssembly.Table({initial:27,element:\"anyfunc\"}),getWasmTableEntry=e=>{var t=wasmTableMirror[e];return t||(e>=wasmTableMirror.length&&(wasmTableMirror.length=e+1),wasmTableMirror[e]=t=wasmTable.get(e)),t},updateTableMap=(e,t)=>{if(functionsInTableMap)for(var _=e;_<e+t;_++){var s=getWasmTableEntry(_);s&&functionsInTableMap.set(s,_)}},functionsInTableMap,getFunctionAddress=e=>(functionsInTableMap||(functionsInTableMap=new WeakMap,updateTableMap(0,wasmTable.length)),functionsInTableMap.get(e)||0),freeTableIndexes=[],getEmptyTableSlot=()=>{if(freeTableIndexes.length)return freeTableIndexes.pop();try{wasmTable.grow(1)}catch(e){if(!(e instanceof RangeError))throw e;throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1},setWasmTableEntry=(e,t)=>{wasmTable.set(e,t),wasmTableMirror[e]=wasmTable.get(e)},addFunction=(e,t)=>{var _=getFunctionAddress(e);if(_)return _;var s=getEmptyTableSlot();try{setWasmTableEntry(s,e)}catch(_){if(!(_ instanceof TypeError))throw _;var r=convertJsFunctionToWasm(e,t);setWasmTableEntry(s,r)}return functionsInTableMap.set(e,s),s},updateGOT=(e,t)=>{for(var _ in e)if(!isInternalSym(_)){var s=e[_];_.startsWith(\"orig$\")&&(_=_.split(\"$\")[1],t=!0),GOT[_]||=new WebAssembly.Global({value:\"i32\",mutable:!0}),(t||0==GOT[_].value)&&(\"function\"==typeof s?GOT[_].value=addFunction(s):\"number\"==typeof s?GOT[_].value=s:err(`unhandled export type for '${_}': ${typeof s}`))}},relocateExports=(e,t,_)=>{var s={};for(var r in e){var a=e[r];\"object\"==typeof a&&(a=a.value),\"number\"==typeof a&&(a+=t),s[r]=a}return updateGOT(s,_),s},isSymbolDefined=e=>{var t=wasmImports[e];return!(!t||t.stub)},dynCallLegacy=(e,t,_)=>(0,Module[\"dynCall_\"+e])(t,..._),dynCall=(e,t,_=[])=>e.includes(\"j\")?dynCallLegacy(e,t,_):getWasmTableEntry(t)(..._),createInvokeFunction=e=>function(){var t=stackSave();try{return dynCall(e,arguments[0],Array.prototype.slice.call(arguments,1))}catch(e){if(stackRestore(t),e!==e+0)throw e;_setThrew(1,0)}},resolveGlobalSymbol=(e,t=!1)=>{var _;return t&&\"orig$\"+e in wasmImports&&(e=\"orig$\"+e),isSymbolDefined(e)?_=wasmImports[e]:e.startsWith(\"invoke_\")&&(_=wasmImports[e]=createInvokeFunction(e.split(\"_\")[1])),{sym:_,name:e}},UTF8ToString=(e,t)=>e?UTF8ArrayToString(HEAPU8,e,t):\"\",loadWebAssemblyModule=(binary,flags,libName,localScope,handle)=>{var metadata=getDylinkMetadata(binary);function loadModule(){var firstLoad=!handle||!HEAP8[handle+8];if(firstLoad){var memAlign=Math.pow(2,metadata.memoryAlign),memoryBase=metadata.memorySize?alignMemory(getMemory(metadata.memorySize+memAlign),memAlign):0,tableBase=metadata.tableSize?wasmTable.length:0;handle&&(HEAP8[handle+8]=1,HEAPU32[handle+12>>2]=memoryBase,HEAP32[handle+16>>2]=metadata.memorySize,HEAPU32[handle+20>>2]=tableBase,HEAP32[handle+24>>2]=metadata.tableSize)}else memoryBase=HEAPU32[handle+12>>2],tableBase=HEAPU32[handle+20>>2];var tableGrowthNeeded=tableBase+metadata.tableSize-wasmTable.length,moduleExports;function resolveSymbol(e){var t=resolveGlobalSymbol(e).sym;return!t&&localScope&&(t=localScope[e]),t||(t=moduleExports[e]),t}tableGrowthNeeded>0&&wasmTable.grow(tableGrowthNeeded);var proxyHandler={get(e,t){switch(t){case\"__memory_base\":return memoryBase;case\"__table_base\":return tableBase}if(t in wasmImports&&!wasmImports[t].stub)return wasmImports[t];var _;t in e||(e[t]=(...e)=>(_||=resolveSymbol(t),_(...e)));return e[t]}},proxy=new Proxy({},proxyHandler),info={\"GOT.mem\":new Proxy({},GOTHandler),\"GOT.func\":new Proxy({},GOTHandler),env:proxy,wasi_snapshot_preview1:proxy};function postInstantiation(module,instance){function addEmAsm(addr,body){for(var args=[],arity=0;arity<16&&-1!=body.indexOf(\"$\"+arity);arity++)args.push(\"$\"+arity);args=args.join(\",\");var func=`(${args}) => { ${body} };`;ASM_CONSTS[start]=eval(func)}if(updateTableMap(tableBase,metadata.tableSize),moduleExports=relocateExports(instance.exports,memoryBase),flags.allowUndefined||reportUndefinedSymbols(),\"__start_em_asm\"in moduleExports)for(var start=moduleExports.__start_em_asm,stop=moduleExports.__stop_em_asm;start<stop;){var jsString=UTF8ToString(start);addEmAsm(start,jsString),start=HEAPU8.indexOf(0,start)+1}function addEmJs(name,cSig,body){var jsArgs=[];if(cSig=cSig.slice(1,-1),\"void\"!=cSig)for(var i in cSig=cSig.split(\",\"),cSig){var jsArg=cSig[i].split(\" \").pop();jsArgs.push(jsArg.replace(\"*\",\"\"))}var func=`(${jsArgs}) => ${body};`;moduleExports[name]=eval(func)}for(var name in moduleExports)if(name.startsWith(\"__em_js__\")){var start=moduleExports[name],jsString=UTF8ToString(start),parts=jsString.split(\"<::>\");addEmJs(name.replace(\"__em_js__\",\"\"),parts[0],parts[1]),delete moduleExports[name]}var applyRelocs=moduleExports.__wasm_apply_data_relocs;applyRelocs&&(runtimeInitialized?applyRelocs():__RELOC_FUNCS__.push(applyRelocs));var init=moduleExports.__wasm_call_ctors;return init&&(runtimeInitialized?init():__ATINIT__.push(init)),moduleExports}if(flags.loadAsync){if(binary instanceof WebAssembly.Module){var instance=new WebAssembly.Instance(binary,info);return Promise.resolve(postInstantiation(binary,instance))}return WebAssembly.instantiate(binary,info).then((e=>postInstantiation(e.module,e.instance)))}var module=binary instanceof WebAssembly.Module?binary:new WebAssembly.Module(binary),instance=new WebAssembly.Instance(module,info);return postInstantiation(module,instance)}return currentModuleWeakSymbols=metadata.weakImports,flags.loadAsync?metadata.neededDynlibs.reduce(((e,t)=>e.then((()=>loadDynamicLibrary(t,flags)))),Promise.resolve()).then(loadModule):(metadata.neededDynlibs.forEach((e=>loadDynamicLibrary(e,flags,localScope))),loadModule())},mergeLibSymbols=(e,t)=>{for(var[_,s]of Object.entries(e)){const e=e=>{isSymbolDefined(e)||(wasmImports[e]=s)};e(_);const t=\"__main_argc_argv\";\"main\"==_&&e(t),_==t&&e(\"main\"),_.startsWith(\"dynCall_\")&&!Module.hasOwnProperty(_)&&(Module[_]=s)}},asyncLoad=(e,t,_,s)=>{var r=s?\"\":getUniqueRunDependency(`al ${e}`);readAsync(e,(e=>{t(new Uint8Array(e)),r&&removeRunDependency(r)}),(t=>{if(!_)throw`Loading data file \"${e}\" failed.`;_()})),r&&addRunDependency(r)};function loadDynamicLibrary(e,t={global:!0,nodelete:!0},_,s){var r=LDSO.loadedLibsByName[e];if(r)return t.global?r.global||(r.global=!0,mergeLibSymbols(r.exports,e)):_&&Object.assign(_,r.exports),t.nodelete&&r.refcount!==1/0&&(r.refcount=1/0),r.refcount++,s&&(LDSO.loadedLibsByHandle[s]=r),!t.loadAsync||Promise.resolve(!0);function a(){if(s){var _=HEAPU32[s+28>>2],r=HEAPU32[s+32>>2];if(_&&r){var a=HEAP8.slice(_,_+r);return t.loadAsync?Promise.resolve(a):a}}var o=locateFile(e);if(t.loadAsync)return new Promise((function(e,t){asyncLoad(o,e,t)}));if(!readBinary)throw new Error(`${o}: file not found, and synchronous loading of external files is not available`);return readBinary(o)}function o(){return t.loadAsync?a().then((r=>loadWebAssemblyModule(r,t,e,_,s))):loadWebAssemblyModule(a(),t,e,_,s)}function n(t){r.global?mergeLibSymbols(t,e):_&&Object.assign(_,t),r.exports=t}return(r=newDSO(e,s,\"loading\")).refcount=t.nodelete?1/0:1,r.global=t.global,t.loadAsync?o().then((e=>(n(e),!0))):(n(o()),!0)}var reportUndefinedSymbols=()=>{for(var[e,t]of Object.entries(GOT))if(0==t.value){var _=resolveGlobalSymbol(e,!0).sym;if(!_&&!t.required)continue;if(\"function\"==typeof _)t.value=addFunction(_,_.sig);else{if(\"number\"!=typeof _)throw new Error(`bad export type for '${e}': ${typeof _}`);t.value=_}}},loadDylibs=()=>{dynamicLibraries.length?(addRunDependency(\"loadDylibs\"),dynamicLibraries.reduce(((e,t)=>e.then((()=>loadDynamicLibrary(t,{loadAsync:!0,global:!0,nodelete:!0,allowUndefined:!0})))),Promise.resolve()).then((()=>{reportUndefinedSymbols(),removeRunDependency(\"loadDylibs\")}))):reportUndefinedSymbols()},noExitRuntime=Module.noExitRuntime||!0;function setValue(e,t,_=\"i8\"){switch(_.endsWith(\"*\")&&(_=\"*\"),_){case\"i1\":case\"i8\":HEAP8[e]=t;break;case\"i16\":HEAP16[e>>1]=t;break;case\"i32\":HEAP32[e>>2]=t;break;case\"i64\":abort(\"to do setValue(i64) use WASM_BIGINT\");case\"float\":HEAPF32[e>>2]=t;break;case\"double\":HEAPF64[e>>3]=t;break;case\"*\":HEAPU32[e>>2]=t;break;default:abort(`invalid type for setValue: ${_}`)}}var ___memory_base=new WebAssembly.Global({value:\"i32\",mutable:!1},1024),___stack_pointer=new WebAssembly.Global({value:\"i32\",mutable:!0},78096),___table_base=new WebAssembly.Global({value:\"i32\",mutable:!1},1),nowIsMonotonic=1,__emscripten_get_now_is_monotonic=()=>nowIsMonotonic;__emscripten_get_now_is_monotonic.sig=\"i\";var _abort=()=>{abort(\"\")};_abort.sig=\"v\";var _emscripten_date_now=()=>Date.now(),_emscripten_get_now;_emscripten_date_now.sig=\"d\",_emscripten_get_now=()=>performance.now(),_emscripten_get_now.sig=\"d\";var _emscripten_memcpy_js=(e,t,_)=>HEAPU8.copyWithin(e,t,t+_);_emscripten_memcpy_js.sig=\"vppp\";var getHeapMax=()=>2147483648,growMemory=e=>{var t=(e-wasmMemory.buffer.byteLength+65535)/65536;try{return wasmMemory.grow(t),updateMemoryViews(),1}catch(e){}},_emscripten_resize_heap=e=>{var t=HEAPU8.length;e>>>=0;var _=getHeapMax();if(e>_)return!1;for(var s,r,a=1;a<=4;a*=2){var o=t*(1+.2/a);o=Math.min(o,e+100663296);var n=Math.min(_,(s=Math.max(e,o))+((r=65536)-s%r)%r);if(growMemory(n))return!0}return!1};_emscripten_resize_heap.sig=\"ip\";var _fd_close=e=>52;_fd_close.sig=\"ii\";var convertI32PairToI53Checked=(e,t)=>t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN;function _fd_seek(e,t,_,s,r){convertI32PairToI53Checked(t,_);return 70}_fd_seek.sig=\"iiiiip\";var printCharBuffers=[null,[],[]],printChar=(e,t)=>{var _=printCharBuffers[e];0===t||10===t?((1===e?out:err)(UTF8ArrayToString(_,0)),_.length=0):_.push(t)},SYSCALLS={varargs:void 0,get(){var e=HEAP32[+SYSCALLS.varargs>>2];return SYSCALLS.varargs+=4,e},getp:()=>SYSCALLS.get(),getStr:e=>UTF8ToString(e)},_fd_write=(e,t,_,s)=>{for(var r=0,a=0;a<_;a++){var o=HEAPU32[t>>2],n=HEAPU32[t+4>>2];t+=8;for(var l=0;l<n;l++)printChar(e,HEAPU8[o+l]);r+=n}return HEAPU32[s>>2]=r,0};function _tree_sitter_log_callback(e,t){if(currentLogCallback){const _=UTF8ToString(t);currentLogCallback(_,0!==e)}}function _tree_sitter_parse_callback(e,t,_,s,r){const a=currentParseCallback(t,{row:_,column:s});\"string\"==typeof a?(setValue(r,a.length,\"i32\"),stringToUTF16(a,e,10240)):setValue(r,0,\"i32\")}_fd_write.sig=\"iippp\";var runtimeKeepaliveCounter=0,keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0,_proc_exit=e=>{EXITSTATUS=e,keepRuntimeAlive()||(Module.onExit?.(e),ABORT=!0),quit_(e,new ExitStatus(e))};_proc_exit.sig=\"vi\";var exitJS=(e,t)=>{EXITSTATUS=e,_proc_exit(e)},handleException=e=>{if(e instanceof ExitStatus||\"unwind\"==e)return EXITSTATUS;quit_(1,e)},lengthBytesUTF8=e=>{for(var t=0,_=0;_<e.length;++_){var s=e.charCodeAt(_);s<=127?t++:s<=2047?t+=2:s>=55296&&s<=57343?(t+=4,++_):t+=3}return t},stringToUTF8Array=(e,t,_,s)=>{if(!(s>0))return 0;for(var r=_,a=_+s-1,o=0;o<e.length;++o){var n=e.charCodeAt(o);if(n>=55296&&n<=57343)n=65536+((1023&n)<<10)|1023&e.charCodeAt(++o);if(n<=127){if(_>=a)break;t[_++]=n}else if(n<=2047){if(_+1>=a)break;t[_++]=192|n>>6,t[_++]=128|63&n}else if(n<=65535){if(_+2>=a)break;t[_++]=224|n>>12,t[_++]=128|n>>6&63,t[_++]=128|63&n}else{if(_+3>=a)break;t[_++]=240|n>>18,t[_++]=128|n>>12&63,t[_++]=128|n>>6&63,t[_++]=128|63&n}}return t[_]=0,_-r},stringToUTF8=(e,t,_)=>stringToUTF8Array(e,HEAPU8,t,_),stringToUTF8OnStack=e=>{var t=lengthBytesUTF8(e)+1,_=stackAlloc(t);return stringToUTF8(e,_,t),_},stringToUTF16=(e,t,_)=>{if(_??=2147483647,_<2)return 0;for(var s=t,r=(_-=2)<2*e.length?_/2:e.length,a=0;a<r;++a){var o=e.charCodeAt(a);HEAP16[t>>1]=o,t+=2}return HEAP16[t>>1]=0,t-s},AsciiToString=e=>{for(var t=\"\";;){var _=HEAPU8[e++];if(!_)return t;t+=String.fromCharCode(_)}},wasmImports={__heap_base:___heap_base,__indirect_function_table:wasmTable,__memory_base:___memory_base,__stack_pointer:___stack_pointer,__table_base:___table_base,_emscripten_get_now_is_monotonic:__emscripten_get_now_is_monotonic,abort:_abort,emscripten_get_now:_emscripten_get_now,emscripten_memcpy_js:_emscripten_memcpy_js,emscripten_resize_heap:_emscripten_resize_heap,fd_close:_fd_close,fd_seek:_fd_seek,fd_write:_fd_write,memory:wasmMemory,tree_sitter_log_callback:_tree_sitter_log_callback,tree_sitter_parse_callback:_tree_sitter_parse_callback},wasmExports=createWasm(),___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports.__wasm_call_ctors)(),___wasm_apply_data_relocs=()=>(___wasm_apply_data_relocs=wasmExports.__wasm_apply_data_relocs)(),_malloc=Module._malloc=e=>(_malloc=Module._malloc=wasmExports.malloc)(e),_calloc=Module._calloc=(e,t)=>(_calloc=Module._calloc=wasmExports.calloc)(e,t),_realloc=Module._realloc=(e,t)=>(_realloc=Module._realloc=wasmExports.realloc)(e,t),_free=Module._free=e=>(_free=Module._free=wasmExports.free)(e),_ts_language_symbol_count=Module._ts_language_symbol_count=e=>(_ts_language_symbol_count=Module._ts_language_symbol_count=wasmExports.ts_language_symbol_count)(e),_ts_language_state_count=Module._ts_language_state_count=e=>(_ts_language_state_count=Module._ts_language_state_count=wasmExports.ts_language_state_count)(e),_ts_language_version=Module._ts_language_version=e=>(_ts_language_version=Module._ts_language_version=wasmExports.ts_language_version)(e),_ts_language_field_count=Module._ts_language_field_count=e=>(_ts_language_field_count=Module._ts_language_field_count=wasmExports.ts_language_field_count)(e),_ts_language_next_state=Module._ts_language_next_state=(e,t,_)=>(_ts_language_next_state=Module._ts_language_next_state=wasmExports.ts_language_next_state)(e,t,_),_ts_language_symbol_name=Module._ts_language_symbol_name=(e,t)=>(_ts_language_symbol_name=Module._ts_language_symbol_name=wasmExports.ts_language_symbol_name)(e,t),_ts_language_symbol_for_name=Module._ts_language_symbol_for_name=(e,t,_,s)=>(_ts_language_symbol_for_name=Module._ts_language_symbol_for_name=wasmExports.ts_language_symbol_for_name)(e,t,_,s),_strncmp=Module._strncmp=(e,t,_)=>(_strncmp=Module._strncmp=wasmExports.strncmp)(e,t,_),_ts_language_symbol_type=Module._ts_language_symbol_type=(e,t)=>(_ts_language_symbol_type=Module._ts_language_symbol_type=wasmExports.ts_language_symbol_type)(e,t),_ts_language_field_name_for_id=Module._ts_language_field_name_for_id=(e,t)=>(_ts_language_field_name_for_id=Module._ts_language_field_name_for_id=wasmExports.ts_language_field_name_for_id)(e,t),_ts_lookahead_iterator_new=Module._ts_lookahead_iterator_new=(e,t)=>(_ts_lookahead_iterator_new=Module._ts_lookahead_iterator_new=wasmExports.ts_lookahead_iterator_new)(e,t),_ts_lookahead_iterator_delete=Module._ts_lookahead_iterator_delete=e=>(_ts_lookahead_iterator_delete=Module._ts_lookahead_iterator_delete=wasmExports.ts_lookahead_iterator_delete)(e),_ts_lookahead_iterator_reset_state=Module._ts_lookahead_iterator_reset_state=(e,t)=>(_ts_lookahead_iterator_reset_state=Module._ts_lookahead_iterator_reset_state=wasmExports.ts_lookahead_iterator_reset_state)(e,t),_ts_lookahead_iterator_reset=Module._ts_lookahead_iterator_reset=(e,t,_)=>(_ts_lookahead_iterator_reset=Module._ts_lookahead_iterator_reset=wasmExports.ts_lookahead_iterator_reset)(e,t,_),_ts_lookahead_iterator_next=Module._ts_lookahead_iterator_next=e=>(_ts_lookahead_iterator_next=Module._ts_lookahead_iterator_next=wasmExports.ts_lookahead_iterator_next)(e),_ts_lookahead_iterator_current_symbol=Module._ts_lookahead_iterator_current_symbol=e=>(_ts_lookahead_iterator_current_symbol=Module._ts_lookahead_iterator_current_symbol=wasmExports.ts_lookahead_iterator_current_symbol)(e),_memset=Module._memset=(e,t,_)=>(_memset=Module._memset=wasmExports.memset)(e,t,_),_memcpy=Module._memcpy=(e,t,_)=>(_memcpy=Module._memcpy=wasmExports.memcpy)(e,t,_),_ts_parser_delete=Module._ts_parser_delete=e=>(_ts_parser_delete=Module._ts_parser_delete=wasmExports.ts_parser_delete)(e),_ts_parser_reset=Module._ts_parser_reset=e=>(_ts_parser_reset=Module._ts_parser_reset=wasmExports.ts_parser_reset)(e),_ts_parser_set_language=Module._ts_parser_set_language=(e,t)=>(_ts_parser_set_language=Module._ts_parser_set_language=wasmExports.ts_parser_set_language)(e,t),_ts_parser_timeout_micros=Module._ts_parser_timeout_micros=e=>(_ts_parser_timeout_micros=Module._ts_parser_timeout_micros=wasmExports.ts_parser_timeout_micros)(e),_ts_parser_set_timeout_micros=Module._ts_parser_set_timeout_micros=(e,t,_)=>(_ts_parser_set_timeout_micros=Module._ts_parser_set_timeout_micros=wasmExports.ts_parser_set_timeout_micros)(e,t,_),_ts_parser_set_included_ranges=Module._ts_parser_set_included_ranges=(e,t,_)=>(_ts_parser_set_included_ranges=Module._ts_parser_set_included_ranges=wasmExports.ts_parser_set_included_ranges)(e,t,_),_memmove=Module._memmove=(e,t,_)=>(_memmove=Module._memmove=wasmExports.memmove)(e,t,_),_memcmp=Module._memcmp=(e,t,_)=>(_memcmp=Module._memcmp=wasmExports.memcmp)(e,t,_),_ts_query_new=Module._ts_query_new=(e,t,_,s,r)=>(_ts_query_new=Module._ts_query_new=wasmExports.ts_query_new)(e,t,_,s,r),_ts_query_delete=Module._ts_query_delete=e=>(_ts_query_delete=Module._ts_query_delete=wasmExports.ts_query_delete)(e),_iswspace=Module._iswspace=e=>(_iswspace=Module._iswspace=wasmExports.iswspace)(e),_iswalnum=Module._iswalnum=e=>(_iswalnum=Module._iswalnum=wasmExports.iswalnum)(e),_ts_query_pattern_count=Module._ts_query_pattern_count=e=>(_ts_query_pattern_count=Module._ts_query_pattern_count=wasmExports.ts_query_pattern_count)(e),_ts_query_capture_count=Module._ts_query_capture_count=e=>(_ts_query_capture_count=Module._ts_query_capture_count=wasmExports.ts_query_capture_count)(e),_ts_query_string_count=Module._ts_query_string_count=e=>(_ts_query_string_count=Module._ts_query_string_count=wasmExports.ts_query_string_count)(e),_ts_query_capture_name_for_id=Module._ts_query_capture_name_for_id=(e,t,_)=>(_ts_query_capture_name_for_id=Module._ts_query_capture_name_for_id=wasmExports.ts_query_capture_name_for_id)(e,t,_),_ts_query_string_value_for_id=Module._ts_query_string_value_for_id=(e,t,_)=>(_ts_query_string_value_for_id=Module._ts_query_string_value_for_id=wasmExports.ts_query_string_value_for_id)(e,t,_),_ts_query_predicates_for_pattern=Module._ts_query_predicates_for_pattern=(e,t,_)=>(_ts_query_predicates_for_pattern=Module._ts_query_predicates_for_pattern=wasmExports.ts_query_predicates_for_pattern)(e,t,_),_ts_query_disable_capture=Module._ts_query_disable_capture=(e,t,_)=>(_ts_query_disable_capture=Module._ts_query_disable_capture=wasmExports.ts_query_disable_capture)(e,t,_),_ts_tree_copy=Module._ts_tree_copy=e=>(_ts_tree_copy=Module._ts_tree_copy=wasmExports.ts_tree_copy)(e),_ts_tree_delete=Module._ts_tree_delete=e=>(_ts_tree_delete=Module._ts_tree_delete=wasmExports.ts_tree_delete)(e),_ts_init=Module._ts_init=()=>(_ts_init=Module._ts_init=wasmExports.ts_init)(),_ts_parser_new_wasm=Module._ts_parser_new_wasm=()=>(_ts_parser_new_wasm=Module._ts_parser_new_wasm=wasmExports.ts_parser_new_wasm)(),_ts_parser_enable_logger_wasm=Module._ts_parser_enable_logger_wasm=(e,t)=>(_ts_parser_enable_logger_wasm=Module._ts_parser_enable_logger_wasm=wasmExports.ts_parser_enable_logger_wasm)(e,t),_ts_parser_parse_wasm=Module._ts_parser_parse_wasm=(e,t,_,s,r)=>(_ts_parser_parse_wasm=Module._ts_parser_parse_wasm=wasmExports.ts_parser_parse_wasm)(e,t,_,s,r),_ts_parser_included_ranges_wasm=Module._ts_parser_included_ranges_wasm=e=>(_ts_parser_included_ranges_wasm=Module._ts_parser_included_ranges_wasm=wasmExports.ts_parser_included_ranges_wasm)(e),_ts_language_type_is_named_wasm=Module._ts_language_type_is_named_wasm=(e,t)=>(_ts_language_type_is_named_wasm=Module._ts_language_type_is_named_wasm=wasmExports.ts_language_type_is_named_wasm)(e,t),_ts_language_type_is_visible_wasm=Module._ts_language_type_is_visible_wasm=(e,t)=>(_ts_language_type_is_visible_wasm=Module._ts_language_type_is_visible_wasm=wasmExports.ts_language_type_is_visible_wasm)(e,t),_ts_tree_root_node_wasm=Module._ts_tree_root_node_wasm=e=>(_ts_tree_root_node_wasm=Module._ts_tree_root_node_wasm=wasmExports.ts_tree_root_node_wasm)(e),_ts_tree_root_node_with_offset_wasm=Module._ts_tree_root_node_with_offset_wasm=e=>(_ts_tree_root_node_with_offset_wasm=Module._ts_tree_root_node_with_offset_wasm=wasmExports.ts_tree_root_node_with_offset_wasm)(e),_ts_tree_edit_wasm=Module._ts_tree_edit_wasm=e=>(_ts_tree_edit_wasm=Module._ts_tree_edit_wasm=wasmExports.ts_tree_edit_wasm)(e),_ts_tree_included_ranges_wasm=Module._ts_tree_included_ranges_wasm=e=>(_ts_tree_included_ranges_wasm=Module._ts_tree_included_ranges_wasm=wasmExports.ts_tree_included_ranges_wasm)(e),_ts_tree_get_changed_ranges_wasm=Module._ts_tree_get_changed_ranges_wasm=(e,t)=>(_ts_tree_get_changed_ranges_wasm=Module._ts_tree_get_changed_ranges_wasm=wasmExports.ts_tree_get_changed_ranges_wasm)(e,t),_ts_tree_cursor_new_wasm=Module._ts_tree_cursor_new_wasm=e=>(_ts_tree_cursor_new_wasm=Module._ts_tree_cursor_new_wasm=wasmExports.ts_tree_cursor_new_wasm)(e),_ts_tree_cursor_delete_wasm=Module._ts_tree_cursor_delete_wasm=e=>(_ts_tree_cursor_delete_wasm=Module._ts_tree_cursor_delete_wasm=wasmExports.ts_tree_cursor_delete_wasm)(e),_ts_tree_cursor_reset_wasm=Module._ts_tree_cursor_reset_wasm=e=>(_ts_tree_cursor_reset_wasm=Module._ts_tree_cursor_reset_wasm=wasmExports.ts_tree_cursor_reset_wasm)(e),_ts_tree_cursor_reset_to_wasm=Module._ts_tree_cursor_reset_to_wasm=(e,t)=>(_ts_tree_cursor_reset_to_wasm=Module._ts_tree_cursor_reset_to_wasm=wasmExports.ts_tree_cursor_reset_to_wasm)(e,t),_ts_tree_cursor_goto_first_child_wasm=Module._ts_tree_cursor_goto_first_child_wasm=e=>(_ts_tree_cursor_goto_first_child_wasm=Module._ts_tree_cursor_goto_first_child_wasm=wasmExports.ts_tree_cursor_goto_first_child_wasm)(e),_ts_tree_cursor_goto_last_child_wasm=Module._ts_tree_cursor_goto_last_child_wasm=e=>(_ts_tree_cursor_goto_last_child_wasm=Module._ts_tree_cursor_goto_last_child_wasm=wasmExports.ts_tree_cursor_goto_last_child_wasm)(e),_ts_tree_cursor_goto_first_child_for_index_wasm=Module._ts_tree_cursor_goto_first_child_for_index_wasm=e=>(_ts_tree_cursor_goto_first_child_for_index_wasm=Module._ts_tree_cursor_goto_first_child_for_index_wasm=wasmExports.ts_tree_cursor_goto_first_child_for_index_wasm)(e),_ts_tree_cursor_goto_first_child_for_position_wasm=Module._ts_tree_cursor_goto_first_child_for_position_wasm=e=>(_ts_tree_cursor_goto_first_child_for_position_wasm=Module._ts_tree_cursor_goto_first_child_for_position_wasm=wasmExports.ts_tree_cursor_goto_first_child_for_position_wasm)(e),_ts_tree_cursor_goto_next_sibling_wasm=Module._ts_tree_cursor_goto_next_sibling_wasm=e=>(_ts_tree_cursor_goto_next_sibling_wasm=Module._ts_tree_cursor_goto_next_sibling_wasm=wasmExports.ts_tree_cursor_goto_next_sibling_wasm)(e),_ts_tree_cursor_goto_previous_sibling_wasm=Module._ts_tree_cursor_goto_previous_sibling_wasm=e=>(_ts_tree_cursor_goto_previous_sibling_wasm=Module._ts_tree_cursor_goto_previous_sibling_wasm=wasmExports.ts_tree_cursor_goto_previous_sibling_wasm)(e),_ts_tree_cursor_goto_descendant_wasm=Module._ts_tree_cursor_goto_descendant_wasm=(e,t)=>(_ts_tree_cursor_goto_descendant_wasm=Module._ts_tree_cursor_goto_descendant_wasm=wasmExports.ts_tree_cursor_goto_descendant_wasm)(e,t),_ts_tree_cursor_goto_parent_wasm=Module._ts_tree_cursor_goto_parent_wasm=e=>(_ts_tree_cursor_goto_parent_wasm=Module._ts_tree_cursor_goto_parent_wasm=wasmExports.ts_tree_cursor_goto_parent_wasm)(e),_ts_tree_cursor_current_node_type_id_wasm=Module._ts_tree_cursor_current_node_type_id_wasm=e=>(_ts_tree_cursor_current_node_type_id_wasm=Module._ts_tree_cursor_current_node_type_id_wasm=wasmExports.ts_tree_cursor_current_node_type_id_wasm)(e),_ts_tree_cursor_current_node_state_id_wasm=Module._ts_tree_cursor_current_node_state_id_wasm=e=>(_ts_tree_cursor_current_node_state_id_wasm=Module._ts_tree_cursor_current_node_state_id_wasm=wasmExports.ts_tree_cursor_current_node_state_id_wasm)(e),_ts_tree_cursor_current_node_is_named_wasm=Module._ts_tree_cursor_current_node_is_named_wasm=e=>(_ts_tree_cursor_current_node_is_named_wasm=Module._ts_tree_cursor_current_node_is_named_wasm=wasmExports.ts_tree_cursor_current_node_is_named_wasm)(e),_ts_tree_cursor_current_node_is_missing_wasm=Module._ts_tree_cursor_current_node_is_missing_wasm=e=>(_ts_tree_cursor_current_node_is_missing_wasm=Module._ts_tree_cursor_current_node_is_missing_wasm=wasmExports.ts_tree_cursor_current_node_is_missing_wasm)(e),_ts_tree_cursor_current_node_id_wasm=Module._ts_tree_cursor_current_node_id_wasm=e=>(_ts_tree_cursor_current_node_id_wasm=Module._ts_tree_cursor_current_node_id_wasm=wasmExports.ts_tree_cursor_current_node_id_wasm)(e),_ts_tree_cursor_start_position_wasm=Module._ts_tree_cursor_start_position_wasm=e=>(_ts_tree_cursor_start_position_wasm=Module._ts_tree_cursor_start_position_wasm=wasmExports.ts_tree_cursor_start_position_wasm)(e),_ts_tree_cursor_end_position_wasm=Module._ts_tree_cursor_end_position_wasm=e=>(_ts_tree_cursor_end_position_wasm=Module._ts_tree_cursor_end_position_wasm=wasmExports.ts_tree_cursor_end_position_wasm)(e),_ts_tree_cursor_start_index_wasm=Module._ts_tree_cursor_start_index_wasm=e=>(_ts_tree_cursor_start_index_wasm=Module._ts_tree_cursor_start_index_wasm=wasmExports.ts_tree_cursor_start_index_wasm)(e),_ts_tree_cursor_end_index_wasm=Module._ts_tree_cursor_end_index_wasm=e=>(_ts_tree_cursor_end_index_wasm=Module._ts_tree_cursor_end_index_wasm=wasmExports.ts_tree_cursor_end_index_wasm)(e),_ts_tree_cursor_current_field_id_wasm=Module._ts_tree_cursor_current_field_id_wasm=e=>(_ts_tree_cursor_current_field_id_wasm=Module._ts_tree_cursor_current_field_id_wasm=wasmExports.ts_tree_cursor_current_field_id_wasm)(e),_ts_tree_cursor_current_depth_wasm=Module._ts_tree_cursor_current_depth_wasm=e=>(_ts_tree_cursor_current_depth_wasm=Module._ts_tree_cursor_current_depth_wasm=wasmExports.ts_tree_cursor_current_depth_wasm)(e),_ts_tree_cursor_current_descendant_index_wasm=Module._ts_tree_cursor_current_descendant_index_wasm=e=>(_ts_tree_cursor_current_descendant_index_wasm=Module._ts_tree_cursor_current_descendant_index_wasm=wasmExports.ts_tree_cursor_current_descendant_index_wasm)(e),_ts_tree_cursor_current_node_wasm=Module._ts_tree_cursor_current_node_wasm=e=>(_ts_tree_cursor_current_node_wasm=Module._ts_tree_cursor_current_node_wasm=wasmExports.ts_tree_cursor_current_node_wasm)(e),_ts_node_symbol_wasm=Module._ts_node_symbol_wasm=e=>(_ts_node_symbol_wasm=Module._ts_node_symbol_wasm=wasmExports.ts_node_symbol_wasm)(e),_ts_node_field_name_for_child_wasm=Module._ts_node_field_name_for_child_wasm=(e,t)=>(_ts_node_field_name_for_child_wasm=Module._ts_node_field_name_for_child_wasm=wasmExports.ts_node_field_name_for_child_wasm)(e,t),_ts_node_children_by_field_id_wasm=Module._ts_node_children_by_field_id_wasm=(e,t)=>(_ts_node_children_by_field_id_wasm=Module._ts_node_children_by_field_id_wasm=wasmExports.ts_node_children_by_field_id_wasm)(e,t),_ts_node_first_child_for_byte_wasm=Module._ts_node_first_child_for_byte_wasm=e=>(_ts_node_first_child_for_byte_wasm=Module._ts_node_first_child_for_byte_wasm=wasmExports.ts_node_first_child_for_byte_wasm)(e),_ts_node_first_named_child_for_byte_wasm=Module._ts_node_first_named_child_for_byte_wasm=e=>(_ts_node_first_named_child_for_byte_wasm=Module._ts_node_first_named_child_for_byte_wasm=wasmExports.ts_node_first_named_child_for_byte_wasm)(e),_ts_node_grammar_symbol_wasm=Module._ts_node_grammar_symbol_wasm=e=>(_ts_node_grammar_symbol_wasm=Module._ts_node_grammar_symbol_wasm=wasmExports.ts_node_grammar_symbol_wasm)(e),_ts_node_child_count_wasm=Module._ts_node_child_count_wasm=e=>(_ts_node_child_count_wasm=Module._ts_node_child_count_wasm=wasmExports.ts_node_child_count_wasm)(e),_ts_node_named_child_count_wasm=Module._ts_node_named_child_count_wasm=e=>(_ts_node_named_child_count_wasm=Module._ts_node_named_child_count_wasm=wasmExports.ts_node_named_child_count_wasm)(e),_ts_node_child_wasm=Module._ts_node_child_wasm=(e,t)=>(_ts_node_child_wasm=Module._ts_node_child_wasm=wasmExports.ts_node_child_wasm)(e,t),_ts_node_named_child_wasm=Module._ts_node_named_child_wasm=(e,t)=>(_ts_node_named_child_wasm=Module._ts_node_named_child_wasm=wasmExports.ts_node_named_child_wasm)(e,t),_ts_node_child_by_field_id_wasm=Module._ts_node_child_by_field_id_wasm=(e,t)=>(_ts_node_child_by_field_id_wasm=Module._ts_node_child_by_field_id_wasm=wasmExports.ts_node_child_by_field_id_wasm)(e,t),_ts_node_next_sibling_wasm=Module._ts_node_next_sibling_wasm=e=>(_ts_node_next_sibling_wasm=Module._ts_node_next_sibling_wasm=wasmExports.ts_node_next_sibling_wasm)(e),_ts_node_prev_sibling_wasm=Module._ts_node_prev_sibling_wasm=e=>(_ts_node_prev_sibling_wasm=Module._ts_node_prev_sibling_wasm=wasmExports.ts_node_prev_sibling_wasm)(e),_ts_node_next_named_sibling_wasm=Module._ts_node_next_named_sibling_wasm=e=>(_ts_node_next_named_sibling_wasm=Module._ts_node_next_named_sibling_wasm=wasmExports.ts_node_next_named_sibling_wasm)(e),_ts_node_prev_named_sibling_wasm=Module._ts_node_prev_named_sibling_wasm=e=>(_ts_node_prev_named_sibling_wasm=Module._ts_node_prev_named_sibling_wasm=wasmExports.ts_node_prev_named_sibling_wasm)(e),_ts_node_descendant_count_wasm=Module._ts_node_descendant_count_wasm=e=>(_ts_node_descendant_count_wasm=Module._ts_node_descendant_count_wasm=wasmExports.ts_node_descendant_count_wasm)(e),_ts_node_parent_wasm=Module._ts_node_parent_wasm=e=>(_ts_node_parent_wasm=Module._ts_node_parent_wasm=wasmExports.ts_node_parent_wasm)(e),_ts_node_descendant_for_index_wasm=Module._ts_node_descendant_for_index_wasm=e=>(_ts_node_descendant_for_index_wasm=Module._ts_node_descendant_for_index_wasm=wasmExports.ts_node_descendant_for_index_wasm)(e),_ts_node_named_descendant_for_index_wasm=Module._ts_node_named_descendant_for_index_wasm=e=>(_ts_node_named_descendant_for_index_wasm=Module._ts_node_named_descendant_for_index_wasm=wasmExports.ts_node_named_descendant_for_index_wasm)(e),_ts_node_descendant_for_position_wasm=Module._ts_node_descendant_for_position_wasm=e=>(_ts_node_descendant_for_position_wasm=Module._ts_node_descendant_for_position_wasm=wasmExports.ts_node_descendant_for_position_wasm)(e),_ts_node_named_descendant_for_position_wasm=Module._ts_node_named_descendant_for_position_wasm=e=>(_ts_node_named_descendant_for_position_wasm=Module._ts_node_named_descendant_for_position_wasm=wasmExports.ts_node_named_descendant_for_position_wasm)(e),_ts_node_start_point_wasm=Module._ts_node_start_point_wasm=e=>(_ts_node_start_point_wasm=Module._ts_node_start_point_wasm=wasmExports.ts_node_start_point_wasm)(e),_ts_node_end_point_wasm=Module._ts_node_end_point_wasm=e=>(_ts_node_end_point_wasm=Module._ts_node_end_point_wasm=wasmExports.ts_node_end_point_wasm)(e),_ts_node_start_index_wasm=Module._ts_node_start_index_wasm=e=>(_ts_node_start_index_wasm=Module._ts_node_start_index_wasm=wasmExports.ts_node_start_index_wasm)(e),_ts_node_end_index_wasm=Module._ts_node_end_index_wasm=e=>(_ts_node_end_index_wasm=Module._ts_node_end_index_wasm=wasmExports.ts_node_end_index_wasm)(e),_ts_node_to_string_wasm=Module._ts_node_to_string_wasm=e=>(_ts_node_to_string_wasm=Module._ts_node_to_string_wasm=wasmExports.ts_node_to_string_wasm)(e),_ts_node_children_wasm=Module._ts_node_children_wasm=e=>(_ts_node_children_wasm=Module._ts_node_children_wasm=wasmExports.ts_node_children_wasm)(e),_ts_node_named_children_wasm=Module._ts_node_named_children_wasm=e=>(_ts_node_named_children_wasm=Module._ts_node_named_children_wasm=wasmExports.ts_node_named_children_wasm)(e),_ts_node_descendants_of_type_wasm=Module._ts_node_descendants_of_type_wasm=(e,t,_,s,r,a,o)=>(_ts_node_descendants_of_type_wasm=Module._ts_node_descendants_of_type_wasm=wasmExports.ts_node_descendants_of_type_wasm)(e,t,_,s,r,a,o),_ts_node_is_named_wasm=Module._ts_node_is_named_wasm=e=>(_ts_node_is_named_wasm=Module._ts_node_is_named_wasm=wasmExports.ts_node_is_named_wasm)(e),_ts_node_has_changes_wasm=Module._ts_node_has_changes_wasm=e=>(_ts_node_has_changes_wasm=Module._ts_node_has_changes_wasm=wasmExports.ts_node_has_changes_wasm)(e),_ts_node_has_error_wasm=Module._ts_node_has_error_wasm=e=>(_ts_node_has_error_wasm=Module._ts_node_has_error_wasm=wasmExports.ts_node_has_error_wasm)(e),_ts_node_is_error_wasm=Module._ts_node_is_error_wasm=e=>(_ts_node_is_error_wasm=Module._ts_node_is_error_wasm=wasmExports.ts_node_is_error_wasm)(e),_ts_node_is_missing_wasm=Module._ts_node_is_missing_wasm=e=>(_ts_node_is_missing_wasm=Module._ts_node_is_missing_wasm=wasmExports.ts_node_is_missing_wasm)(e),_ts_node_is_extra_wasm=Module._ts_node_is_extra_wasm=e=>(_ts_node_is_extra_wasm=Module._ts_node_is_extra_wasm=wasmExports.ts_node_is_extra_wasm)(e),_ts_node_parse_state_wasm=Module._ts_node_parse_state_wasm=e=>(_ts_node_parse_state_wasm=Module._ts_node_parse_state_wasm=wasmExports.ts_node_parse_state_wasm)(e),_ts_node_next_parse_state_wasm=Module._ts_node_next_parse_state_wasm=e=>(_ts_node_next_parse_state_wasm=Module._ts_node_next_parse_state_wasm=wasmExports.ts_node_next_parse_state_wasm)(e),_ts_query_matches_wasm=Module._ts_query_matches_wasm=(e,t,_,s,r,a,o,n,l,d)=>(_ts_query_matches_wasm=Module._ts_query_matches_wasm=wasmExports.ts_query_matches_wasm)(e,t,_,s,r,a,o,n,l,d),_ts_query_captures_wasm=Module._ts_query_captures_wasm=(e,t,_,s,r,a,o,n,l,d)=>(_ts_query_captures_wasm=Module._ts_query_captures_wasm=wasmExports.ts_query_captures_wasm)(e,t,_,s,r,a,o,n,l,d),_iswalpha=Module._iswalpha=e=>(_iswalpha=Module._iswalpha=wasmExports.iswalpha)(e),_iswblank=Module._iswblank=e=>(_iswblank=Module._iswblank=wasmExports.iswblank)(e),_iswdigit=Module._iswdigit=e=>(_iswdigit=Module._iswdigit=wasmExports.iswdigit)(e),_iswlower=Module._iswlower=e=>(_iswlower=Module._iswlower=wasmExports.iswlower)(e),_iswupper=Module._iswupper=e=>(_iswupper=Module._iswupper=wasmExports.iswupper)(e),_iswxdigit=Module._iswxdigit=e=>(_iswxdigit=Module._iswxdigit=wasmExports.iswxdigit)(e),_memchr=Module._memchr=(e,t,_)=>(_memchr=Module._memchr=wasmExports.memchr)(e,t,_),_strlen=Module._strlen=e=>(_strlen=Module._strlen=wasmExports.strlen)(e),_strcmp=Module._strcmp=(e,t)=>(_strcmp=Module._strcmp=wasmExports.strcmp)(e,t),_strncat=Module._strncat=(e,t,_)=>(_strncat=Module._strncat=wasmExports.strncat)(e,t,_),_strncpy=Module._strncpy=(e,t,_)=>(_strncpy=Module._strncpy=wasmExports.strncpy)(e,t,_),_towlower=Module._towlower=e=>(_towlower=Module._towlower=wasmExports.towlower)(e),_towupper=Module._towupper=e=>(_towupper=Module._towupper=wasmExports.towupper)(e),_setThrew=(e,t)=>(_setThrew=wasmExports.setThrew)(e,t),stackSave=()=>(stackSave=wasmExports.stackSave)(),stackRestore=e=>(stackRestore=wasmExports.stackRestore)(e),stackAlloc=e=>(stackAlloc=wasmExports.stackAlloc)(e),dynCall_jiji=Module.dynCall_jiji=(e,t,_,s,r)=>(dynCall_jiji=Module.dynCall_jiji=wasmExports.dynCall_jiji)(e,t,_,s,r),_orig$ts_parser_timeout_micros=Module._orig$ts_parser_timeout_micros=e=>(_orig$ts_parser_timeout_micros=Module._orig$ts_parser_timeout_micros=wasmExports.orig$ts_parser_timeout_micros)(e),_orig$ts_parser_set_timeout_micros=Module._orig$ts_parser_set_timeout_micros=(e,t)=>(_orig$ts_parser_set_timeout_micros=Module._orig$ts_parser_set_timeout_micros=wasmExports.orig$ts_parser_set_timeout_micros)(e,t),calledRun;function callMain(e=[]){var t=resolveGlobalSymbol(\"main\").sym;if(t){e.unshift(thisProgram);var _=e.length,s=stackAlloc(4*(_+1)),r=s;e.forEach((e=>{HEAPU32[r>>2]=stringToUTF8OnStack(e),r+=4})),HEAPU32[r>>2]=0;try{var a=t(_,s);return exitJS(a,!0),a}catch(e){return handleException(e)}}}function run(e=arguments_){function t(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT||(initRuntime(),preMain(),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),shouldRunNow&&callMain(e),postRun()))}runDependencies>0||(preRun(),runDependencies>0||(Module.setStatus?(Module.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){Module.setStatus(\"\")}),1),t()}),1)):t()))}if(Module.AsciiToString=AsciiToString,Module.stringToUTF16=stringToUTF16,dependenciesFulfilled=function e(){calledRun||run(),calledRun||(dependenciesFulfilled=e)},Module.preInit)for(\"function\"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);Module.preInit.length>0;)Module.preInit.pop()();var shouldRunNow=!0;Module.noInitialRun&&(shouldRunNow=!1),run();const C=Module,INTERNAL={},SIZE_OF_INT=4,SIZE_OF_CURSOR=4*SIZE_OF_INT,SIZE_OF_NODE=5*SIZE_OF_INT,SIZE_OF_POINT=2*SIZE_OF_INT,SIZE_OF_RANGE=2*SIZE_OF_INT+2*SIZE_OF_POINT,ZERO_POINT={row:0,column:0},QUERY_WORD_REGEX=/[\\w-.]*/g,PREDICATE_STEP_TYPE_CAPTURE=1,PREDICATE_STEP_TYPE_STRING=2,LANGUAGE_FUNCTION_REGEX=/^_?tree_sitter_\\w+/;let VERSION,MIN_COMPATIBLE_VERSION,TRANSFER_BUFFER,currentParseCallback,currentLogCallback;class ParserImpl{static init(){TRANSFER_BUFFER=C._ts_init(),VERSION=getValue(TRANSFER_BUFFER,\"i32\"),MIN_COMPATIBLE_VERSION=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\")}initialize(){C._ts_parser_new_wasm(),this[0]=getValue(TRANSFER_BUFFER,\"i32\"),this[1]=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\")}delete(){C._ts_parser_delete(this[0]),C._free(this[1]),this[0]=0,this[1]=0}setLanguage(e){let t;if(e){if(e.constructor!==Language)throw new Error(\"Argument must be a Language\");{t=e[0];const _=C._ts_language_version(t);if(_<MIN_COMPATIBLE_VERSION||VERSION<_)throw new Error(`Incompatible language version ${_}. Compatibility range ${MIN_COMPATIBLE_VERSION} through ${VERSION}.`)}}else t=0,e=null;return this.language=e,C._ts_parser_set_language(this[0],t),this}getLanguage(){return this.language}parse(e,t,_){if(\"string\"==typeof e)currentParseCallback=(t,_)=>e.slice(t);else{if(\"function\"!=typeof e)throw new Error(\"Argument must be a string or a function\");currentParseCallback=e}this.logCallback?(currentLogCallback=this.logCallback,C._ts_parser_enable_logger_wasm(this[0],1)):(currentLogCallback=null,C._ts_parser_enable_logger_wasm(this[0],0));let s=0,r=0;if(_?.includedRanges){s=_.includedRanges.length,r=C._calloc(s,SIZE_OF_RANGE);let e=r;for(let t=0;t<s;t++)marshalRange(e,_.includedRanges[t]),e+=SIZE_OF_RANGE}const a=C._ts_parser_parse_wasm(this[0],this[1],t?t[0]:0,r,s);if(!a)throw currentParseCallback=null,currentLogCallback=null,new Error(\"Parsing failed\");const o=new Tree(INTERNAL,a,this.language,currentParseCallback);return currentParseCallback=null,currentLogCallback=null,o}reset(){C._ts_parser_reset(this[0])}getIncludedRanges(){C._ts_parser_included_ranges_wasm(this[0]);const e=getValue(TRANSFER_BUFFER,\"i32\"),t=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),_=new Array(e);if(e>0){let s=t;for(let t=0;t<e;t++)_[t]=unmarshalRange(s),s+=SIZE_OF_RANGE;C._free(t)}return _}getTimeoutMicros(){return C._ts_parser_timeout_micros(this[0])}setTimeoutMicros(e){C._ts_parser_set_timeout_micros(this[0],e)}setLogger(e){if(e){if(\"function\"!=typeof e)throw new Error(\"Logger callback must be a function\")}else e=null;return this.logCallback=e,this}getLogger(){return this.logCallback}}class Tree{constructor(e,t,_,s){assertInternal(e),this[0]=t,this.language=_,this.textCallback=s}copy(){const e=C._ts_tree_copy(this[0]);return new Tree(INTERNAL,e,this.language,this.textCallback)}delete(){C._ts_tree_delete(this[0]),this[0]=0}edit(e){marshalEdit(e),C._ts_tree_edit_wasm(this[0])}get rootNode(){return C._ts_tree_root_node_wasm(this[0]),unmarshalNode(this)}rootNodeWithOffset(e,t){const _=TRANSFER_BUFFER+SIZE_OF_NODE;return setValue(_,e,\"i32\"),marshalPoint(_+SIZE_OF_INT,t),C._ts_tree_root_node_with_offset_wasm(this[0]),unmarshalNode(this)}getLanguage(){return this.language}walk(){return this.rootNode.walk()}getChangedRanges(e){if(e.constructor!==Tree)throw new TypeError(\"Argument must be a Tree\");C._ts_tree_get_changed_ranges_wasm(this[0],e[0]);const t=getValue(TRANSFER_BUFFER,\"i32\"),_=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),s=new Array(t);if(t>0){let e=_;for(let _=0;_<t;_++)s[_]=unmarshalRange(e),e+=SIZE_OF_RANGE;C._free(_)}return s}getIncludedRanges(){C._ts_tree_included_ranges_wasm(this[0]);const e=getValue(TRANSFER_BUFFER,\"i32\"),t=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),_=new Array(e);if(e>0){let s=t;for(let t=0;t<e;t++)_[t]=unmarshalRange(s),s+=SIZE_OF_RANGE;C._free(t)}return _}}class Node{constructor(e,t){assertInternal(e),this.tree=t}get typeId(){return marshalNode(this),C._ts_node_symbol_wasm(this.tree[0])}get grammarId(){return marshalNode(this),C._ts_node_grammar_symbol_wasm(this.tree[0])}get type(){return this.tree.language.types[this.typeId]||\"ERROR\"}get grammarType(){return this.tree.language.types[this.grammarId]||\"ERROR\"}get endPosition(){return marshalNode(this),C._ts_node_end_point_wasm(this.tree[0]),unmarshalPoint(TRANSFER_BUFFER)}get endIndex(){return marshalNode(this),C._ts_node_end_index_wasm(this.tree[0])}get text(){return getText(this.tree,this.startIndex,this.endIndex)}get parseState(){return marshalNode(this),C._ts_node_parse_state_wasm(this.tree[0])}get nextParseState(){return marshalNode(this),C._ts_node_next_parse_state_wasm(this.tree[0])}get isNamed(){return marshalNode(this),1===C._ts_node_is_named_wasm(this.tree[0])}get hasError(){return marshalNode(this),1===C._ts_node_has_error_wasm(this.tree[0])}get hasChanges(){return marshalNode(this),1===C._ts_node_has_changes_wasm(this.tree[0])}get isError(){return marshalNode(this),1===C._ts_node_is_error_wasm(this.tree[0])}get isMissing(){return marshalNode(this),1===C._ts_node_is_missing_wasm(this.tree[0])}get isExtra(){return marshalNode(this),1===C._ts_node_is_extra_wasm(this.tree[0])}equals(e){return this.id===e.id}child(e){return marshalNode(this),C._ts_node_child_wasm(this.tree[0],e),unmarshalNode(this.tree)}namedChild(e){return marshalNode(this),C._ts_node_named_child_wasm(this.tree[0],e),unmarshalNode(this.tree)}childForFieldId(e){return marshalNode(this),C._ts_node_child_by_field_id_wasm(this.tree[0],e),unmarshalNode(this.tree)}childForFieldName(e){const t=this.tree.language.fields.indexOf(e);return-1!==t?this.childForFieldId(t):null}fieldNameForChild(e){marshalNode(this);const t=C._ts_node_field_name_for_child_wasm(this.tree[0],e);if(!t)return null;return AsciiToString(t)}childrenForFieldName(e){const t=this.tree.language.fields.indexOf(e);return-1!==t&&0!==t?this.childrenForFieldId(t):[]}childrenForFieldId(e){marshalNode(this),C._ts_node_children_by_field_id_wasm(this.tree[0],e);const t=getValue(TRANSFER_BUFFER,\"i32\"),_=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),s=new Array(t);if(t>0){let e=_;for(let _=0;_<t;_++)s[_]=unmarshalNode(this.tree,e),e+=SIZE_OF_NODE;C._free(_)}return s}firstChildForIndex(e){marshalNode(this);return setValue(TRANSFER_BUFFER+SIZE_OF_NODE,e,\"i32\"),C._ts_node_first_child_for_byte_wasm(this.tree[0]),unmarshalNode(this.tree)}firstNamedChildForIndex(e){marshalNode(this);return setValue(TRANSFER_BUFFER+SIZE_OF_NODE,e,\"i32\"),C._ts_node_first_named_child_for_byte_wasm(this.tree[0]),unmarshalNode(this.tree)}get childCount(){return marshalNode(this),C._ts_node_child_count_wasm(this.tree[0])}get namedChildCount(){return marshalNode(this),C._ts_node_named_child_count_wasm(this.tree[0])}get firstChild(){return this.child(0)}get firstNamedChild(){return this.namedChild(0)}get lastChild(){return this.child(this.childCount-1)}get lastNamedChild(){return this.namedChild(this.namedChildCount-1)}get children(){if(!this._children){marshalNode(this),C._ts_node_children_wasm(this.tree[0]);const e=getValue(TRANSFER_BUFFER,\"i32\"),t=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\");if(this._children=new Array(e),e>0){let _=t;for(let t=0;t<e;t++)this._children[t]=unmarshalNode(this.tree,_),_+=SIZE_OF_NODE;C._free(t)}}return this._children}get namedChildren(){if(!this._namedChildren){marshalNode(this),C._ts_node_named_children_wasm(this.tree[0]);const e=getValue(TRANSFER_BUFFER,\"i32\"),t=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\");if(this._namedChildren=new Array(e),e>0){let _=t;for(let t=0;t<e;t++)this._namedChildren[t]=unmarshalNode(this.tree,_),_+=SIZE_OF_NODE;C._free(t)}}return this._namedChildren}descendantsOfType(e,t,_){Array.isArray(e)||(e=[e]),t||(t=ZERO_POINT),_||(_=ZERO_POINT);const s=[],r=this.tree.language.types;for(let t=0,_=r.length;t<_;t++)e.includes(r[t])&&s.push(t);const a=C._malloc(SIZE_OF_INT*s.length);for(let e=0,t=s.length;e<t;e++)setValue(a+e*SIZE_OF_INT,s[e],\"i32\");marshalNode(this),C._ts_node_descendants_of_type_wasm(this.tree[0],a,s.length,t.row,t.column,_.row,_.column);const o=getValue(TRANSFER_BUFFER,\"i32\"),n=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),l=new Array(o);if(o>0){let e=n;for(let t=0;t<o;t++)l[t]=unmarshalNode(this.tree,e),e+=SIZE_OF_NODE}return C._free(n),C._free(a),l}get nextSibling(){return marshalNode(this),C._ts_node_next_sibling_wasm(this.tree[0]),unmarshalNode(this.tree)}get previousSibling(){return marshalNode(this),C._ts_node_prev_sibling_wasm(this.tree[0]),unmarshalNode(this.tree)}get nextNamedSibling(){return marshalNode(this),C._ts_node_next_named_sibling_wasm(this.tree[0]),unmarshalNode(this.tree)}get previousNamedSibling(){return marshalNode(this),C._ts_node_prev_named_sibling_wasm(this.tree[0]),unmarshalNode(this.tree)}get descendantCount(){return marshalNode(this),C._ts_node_descendant_count_wasm(this.tree[0])}get parent(){return marshalNode(this),C._ts_node_parent_wasm(this.tree[0]),unmarshalNode(this.tree)}descendantForIndex(e,t=e){if(\"number\"!=typeof e||\"number\"!=typeof t)throw new Error(\"Arguments must be numbers\");marshalNode(this);const _=TRANSFER_BUFFER+SIZE_OF_NODE;return setValue(_,e,\"i32\"),setValue(_+SIZE_OF_INT,t,\"i32\"),C._ts_node_descendant_for_index_wasm(this.tree[0]),unmarshalNode(this.tree)}namedDescendantForIndex(e,t=e){if(\"number\"!=typeof e||\"number\"!=typeof t)throw new Error(\"Arguments must be numbers\");marshalNode(this);const _=TRANSFER_BUFFER+SIZE_OF_NODE;return setValue(_,e,\"i32\"),setValue(_+SIZE_OF_INT,t,\"i32\"),C._ts_node_named_descendant_for_index_wasm(this.tree[0]),unmarshalNode(this.tree)}descendantForPosition(e,t=e){if(!isPoint(e)||!isPoint(t))throw new Error(\"Arguments must be {row, column} objects\");marshalNode(this);const _=TRANSFER_BUFFER+SIZE_OF_NODE;return marshalPoint(_,e),marshalPoint(_+SIZE_OF_POINT,t),C._ts_node_descendant_for_position_wasm(this.tree[0]),unmarshalNode(this.tree)}namedDescendantForPosition(e,t=e){if(!isPoint(e)||!isPoint(t))throw new Error(\"Arguments must be {row, column} objects\");marshalNode(this);const _=TRANSFER_BUFFER+SIZE_OF_NODE;return marshalPoint(_,e),marshalPoint(_+SIZE_OF_POINT,t),C._ts_node_named_descendant_for_position_wasm(this.tree[0]),unmarshalNode(this.tree)}walk(){return marshalNode(this),C._ts_tree_cursor_new_wasm(this.tree[0]),new TreeCursor(INTERNAL,this.tree)}toString(){marshalNode(this);const e=C._ts_node_to_string_wasm(this.tree[0]),t=AsciiToString(e);return C._free(e),t}}class TreeCursor{constructor(e,t){assertInternal(e),this.tree=t,unmarshalTreeCursor(this)}delete(){marshalTreeCursor(this),C._ts_tree_cursor_delete_wasm(this.tree[0]),this[0]=this[1]=this[2]=0}reset(e){marshalNode(e),marshalTreeCursor(this,TRANSFER_BUFFER+SIZE_OF_NODE),C._ts_tree_cursor_reset_wasm(this.tree[0]),unmarshalTreeCursor(this)}resetTo(e){marshalTreeCursor(this,TRANSFER_BUFFER),marshalTreeCursor(e,TRANSFER_BUFFER+SIZE_OF_CURSOR),C._ts_tree_cursor_reset_to_wasm(this.tree[0],e.tree[0]),unmarshalTreeCursor(this)}get nodeType(){return this.tree.language.types[this.nodeTypeId]||\"ERROR\"}get nodeTypeId(){return marshalTreeCursor(this),C._ts_tree_cursor_current_node_type_id_wasm(this.tree[0])}get nodeStateId(){return marshalTreeCursor(this),C._ts_tree_cursor_current_node_state_id_wasm(this.tree[0])}get nodeId(){return marshalTreeCursor(this),C._ts_tree_cursor_current_node_id_wasm(this.tree[0])}get nodeIsNamed(){return marshalTreeCursor(this),1===C._ts_tree_cursor_current_node_is_named_wasm(this.tree[0])}get nodeIsMissing(){return marshalTreeCursor(this),1===C._ts_tree_cursor_current_node_is_missing_wasm(this.tree[0])}get nodeText(){marshalTreeCursor(this);const e=C._ts_tree_cursor_start_index_wasm(this.tree[0]),t=C._ts_tree_cursor_end_index_wasm(this.tree[0]);return getText(this.tree,e,t)}get startPosition(){return marshalTreeCursor(this),C._ts_tree_cursor_start_position_wasm(this.tree[0]),unmarshalPoint(TRANSFER_BUFFER)}get endPosition(){return marshalTreeCursor(this),C._ts_tree_cursor_end_position_wasm(this.tree[0]),unmarshalPoint(TRANSFER_BUFFER)}get startIndex(){return marshalTreeCursor(this),C._ts_tree_cursor_start_index_wasm(this.tree[0])}get endIndex(){return marshalTreeCursor(this),C._ts_tree_cursor_end_index_wasm(this.tree[0])}get currentNode(){return marshalTreeCursor(this),C._ts_tree_cursor_current_node_wasm(this.tree[0]),unmarshalNode(this.tree)}get currentFieldId(){return marshalTreeCursor(this),C._ts_tree_cursor_current_field_id_wasm(this.tree[0])}get currentFieldName(){return this.tree.language.fields[this.currentFieldId]}get currentDepth(){return marshalTreeCursor(this),C._ts_tree_cursor_current_depth_wasm(this.tree[0])}get currentDescendantIndex(){return marshalTreeCursor(this),C._ts_tree_cursor_current_descendant_index_wasm(this.tree[0])}gotoFirstChild(){marshalTreeCursor(this);const e=C._ts_tree_cursor_goto_first_child_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===e}gotoLastChild(){marshalTreeCursor(this);const e=C._ts_tree_cursor_goto_last_child_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===e}gotoFirstChildForIndex(e){marshalTreeCursor(this),setValue(TRANSFER_BUFFER+SIZE_OF_CURSOR,e,\"i32\");const t=C._ts_tree_cursor_goto_first_child_for_index_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===t}gotoFirstChildForPosition(e){marshalTreeCursor(this),marshalPoint(TRANSFER_BUFFER+SIZE_OF_CURSOR,e);const t=C._ts_tree_cursor_goto_first_child_for_position_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===t}gotoNextSibling(){marshalTreeCursor(this);const e=C._ts_tree_cursor_goto_next_sibling_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===e}gotoPreviousSibling(){marshalTreeCursor(this);const e=C._ts_tree_cursor_goto_previous_sibling_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===e}gotoDescendant(e){marshalTreeCursor(this),C._ts_tree_cursor_goto_descendant_wasm(this.tree[0],e),unmarshalTreeCursor(this)}gotoParent(){marshalTreeCursor(this);const e=C._ts_tree_cursor_goto_parent_wasm(this.tree[0]);return unmarshalTreeCursor(this),1===e}}class Language{constructor(e,t){assertInternal(e),this[0]=t,this.types=new Array(C._ts_language_symbol_count(this[0]));for(let e=0,t=this.types.length;e<t;e++)C._ts_language_symbol_type(this[0],e)<2&&(this.types[e]=UTF8ToString(C._ts_language_symbol_name(this[0],e)));this.fields=new Array(C._ts_language_field_count(this[0])+1);for(let e=0,t=this.fields.length;e<t;e++){const t=C._ts_language_field_name_for_id(this[0],e);this.fields[e]=0!==t?UTF8ToString(t):null}}get version(){return C._ts_language_version(this[0])}get fieldCount(){return this.fields.length-1}get stateCount(){return C._ts_language_state_count(this[0])}fieldIdForName(e){const t=this.fields.indexOf(e);return-1!==t?t:null}fieldNameForId(e){return this.fields[e]||null}idForNodeType(e,t){const _=lengthBytesUTF8(e),s=C._malloc(_+1);stringToUTF8(e,s,_+1);const r=C._ts_language_symbol_for_name(this[0],s,_,t);return C._free(s),r||null}get nodeTypeCount(){return C._ts_language_symbol_count(this[0])}nodeTypeForId(e){const t=C._ts_language_symbol_name(this[0],e);return t?UTF8ToString(t):null}nodeTypeIsNamed(e){return!!C._ts_language_type_is_named_wasm(this[0],e)}nodeTypeIsVisible(e){return!!C._ts_language_type_is_visible_wasm(this[0],e)}nextState(e,t){return C._ts_language_next_state(this[0],e,t)}lookaheadIterator(e){const t=C._ts_lookahead_iterator_new(this[0],e);return t?new LookaheadIterable(INTERNAL,t,this):null}query(e){const t=lengthBytesUTF8(e),_=C._malloc(t+1);stringToUTF8(e,_,t+1);const s=C._ts_query_new(this[0],_,t,TRANSFER_BUFFER,TRANSFER_BUFFER+SIZE_OF_INT);if(!s){const t=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),s=getValue(TRANSFER_BUFFER,\"i32\"),r=UTF8ToString(_,s).length,a=e.substr(r,100).split(\"\\n\")[0];let o,n=a.match(QUERY_WORD_REGEX)[0];switch(t){case 2:o=new RangeError(`Bad node name '${n}'`);break;case 3:o=new RangeError(`Bad field name '${n}'`);break;case 4:o=new RangeError(`Bad capture name @${n}`);break;case 5:o=new TypeError(`Bad pattern structure at offset ${r}: '${a}'...`),n=\"\";break;default:o=new SyntaxError(`Bad syntax at offset ${r}: '${a}'...`),n=\"\"}throw o.index=r,o.length=n.length,C._free(_),o}const r=C._ts_query_string_count(s),a=C._ts_query_capture_count(s),o=C._ts_query_pattern_count(s),n=new Array(a),l=new Array(r);for(let e=0;e<a;e++){const t=C._ts_query_capture_name_for_id(s,e,TRANSFER_BUFFER),_=getValue(TRANSFER_BUFFER,\"i32\");n[e]=UTF8ToString(t,_)}for(let e=0;e<r;e++){const t=C._ts_query_string_value_for_id(s,e,TRANSFER_BUFFER),_=getValue(TRANSFER_BUFFER,\"i32\");l[e]=UTF8ToString(t,_)}const d=new Array(o),u=new Array(o),m=new Array(o),c=new Array(o),w=new Array(o);for(let e=0;e<o;e++){const t=C._ts_query_predicates_for_pattern(s,e,TRANSFER_BUFFER),_=getValue(TRANSFER_BUFFER,\"i32\");c[e]=[],w[e]=[];const r=[];let a=t;for(let t=0;t<_;t++){const t=getValue(a,\"i32\");a+=SIZE_OF_INT;const _=getValue(a,\"i32\");if(a+=SIZE_OF_INT,t===PREDICATE_STEP_TYPE_CAPTURE)r.push({type:\"capture\",name:n[_]});else if(t===PREDICATE_STEP_TYPE_STRING)r.push({type:\"string\",value:l[_]});else if(r.length>0){if(\"string\"!==r[0].type)throw new Error(\"Predicates must begin with a literal value\");const t=r[0].value;let _,s=!0,a=!0;switch(t){case\"any-not-eq?\":case\"not-eq?\":s=!1;case\"any-eq?\":case\"eq?\":if(3!==r.length)throw new Error(`Wrong number of arguments to \\`#${t}\\` predicate. Expected 2, got ${r.length-1}`);if(\"capture\"!==r[1].type)throw new Error(`First argument of \\`#${t}\\` predicate must be a capture. Got \"${r[1].value}\"`);if(a=!t.startsWith(\"any-\"),\"capture\"===r[2].type){const t=r[1].name,_=r[2].name;w[e].push((e=>{const r=[],o=[];for(const s of e)s.name===t&&r.push(s.node),s.name===_&&o.push(s.node);const n=(e,t,_)=>_?e.text===t.text:e.text!==t.text;return a?r.every((e=>o.some((t=>n(e,t,s))))):r.some((e=>o.some((t=>n(e,t,s)))))}))}else{_=r[1].name;const t=r[2].value,o=e=>e.text===t,n=e=>e.text!==t;w[e].push((e=>{const t=[];for(const s of e)s.name===_&&t.push(s.node);const r=s?o:n;return a?t.every(r):t.some(r)}))}break;case\"any-not-match?\":case\"not-match?\":s=!1;case\"any-match?\":case\"match?\":if(3!==r.length)throw new Error(`Wrong number of arguments to \\`#${t}\\` predicate. Expected 2, got ${r.length-1}.`);if(\"capture\"!==r[1].type)throw new Error(`First argument of \\`#${t}\\` predicate must be a capture. Got \"${r[1].value}\".`);if(\"string\"!==r[2].type)throw new Error(`Second argument of \\`#${t}\\` predicate must be a string. Got @${r[2].value}.`);_=r[1].name;const o=new RegExp(r[2].value);a=!t.startsWith(\"any-\"),w[e].push((e=>{const t=[];for(const s of e)s.name===_&&t.push(s.node.text);const r=(e,t)=>t?o.test(e):!o.test(e);return 0===t.length?!s:a?t.every((e=>r(e,s))):t.some((e=>r(e,s)))}));break;case\"set!\":if(r.length<2||r.length>3)throw new Error(`Wrong number of arguments to \\`#set!\\` predicate. Expected 1 or 2. Got ${r.length-1}.`);if(r.some((e=>\"string\"!==e.type)))throw new Error('Arguments to `#set!` predicate must be a strings.\".');d[e]||(d[e]={}),d[e][r[1].value]=r[2]?r[2].value:null;break;case\"is?\":case\"is-not?\":if(r.length<2||r.length>3)throw new Error(`Wrong number of arguments to \\`#${t}\\` predicate. Expected 1 or 2. Got ${r.length-1}.`);if(r.some((e=>\"string\"!==e.type)))throw new Error(`Arguments to \\`#${t}\\` predicate must be a strings.\".`);const n=\"is?\"===t?u:m;n[e]||(n[e]={}),n[e][r[1].value]=r[2]?r[2].value:null;break;case\"not-any-of?\":s=!1;case\"any-of?\":if(r.length<2)throw new Error(`Wrong number of arguments to \\`#${t}\\` predicate. Expected at least 1. Got ${r.length-1}.`);if(\"capture\"!==r[1].type)throw new Error(`First argument of \\`#${t}\\` predicate must be a capture. Got \"${r[1].value}\".`);for(let e=2;e<r.length;e++)if(\"string\"!==r[e].type)throw new Error(`Arguments to \\`#${t}\\` predicate must be a strings.\".`);_=r[1].name;const l=r.slice(2).map((e=>e.value));w[e].push((e=>{const t=[];for(const s of e)s.name===_&&t.push(s.node.text);return 0===t.length?!s:t.every((e=>l.includes(e)))===s}));break;default:c[e].push({operator:t,operands:r.slice(1)})}r.length=0}}Object.freeze(d[e]),Object.freeze(u[e]),Object.freeze(m[e])}return C._free(_),new Query(INTERNAL,s,n,w,c,Object.freeze(d),Object.freeze(u),Object.freeze(m))}static load(e){let t;if(e instanceof Uint8Array)t=Promise.resolve(e);else{const _=e;if(\"undefined\"!=typeof process&&process.versions&&process.versions.node){const e=require(\"fs\");t=Promise.resolve(e.readFileSync(_))}else t=fetch(_).then((e=>e.arrayBuffer().then((t=>{if(e.ok)return new Uint8Array(t);{const _=new TextDecoder(\"utf-8\").decode(t);throw new Error(`Language.load failed with status ${e.status}.\\n\\n${_}`)}}))))}return t.then((e=>loadWebAssemblyModule(e,{loadAsync:!0}))).then((e=>{const t=Object.keys(e),_=t.find((e=>LANGUAGE_FUNCTION_REGEX.test(e)&&!e.includes(\"external_scanner_\")));_||console.log(`Couldn't find language function in WASM file. Symbols:\\n${JSON.stringify(t,null,2)}`);const s=e[_]();return new Language(INTERNAL,s)}))}}class LookaheadIterable{constructor(e,t,_){assertInternal(e),this[0]=t,this.language=_}get currentTypeId(){return C._ts_lookahead_iterator_current_symbol(this[0])}get currentType(){return this.language.types[this.currentTypeId]||\"ERROR\"}delete(){C._ts_lookahead_iterator_delete(this[0]),this[0]=0}resetState(e){return C._ts_lookahead_iterator_reset_state(this[0],e)}reset(e,t){return!!C._ts_lookahead_iterator_reset(this[0],e[0],t)&&(this.language=e,!0)}[Symbol.iterator](){const e=this;return{next:()=>C._ts_lookahead_iterator_next(e[0])?{done:!1,value:e.currentType}:{done:!0,value:\"\"}}}}class Query{constructor(e,t,_,s,r,a,o,n){assertInternal(e),this[0]=t,this.captureNames=_,this.textPredicates=s,this.predicates=r,this.setProperties=a,this.assertedProperties=o,this.refutedProperties=n,this.exceededMatchLimit=!1}delete(){C._ts_query_delete(this[0]),this[0]=0}matches(e,{startPosition:t=ZERO_POINT,endPosition:_=ZERO_POINT,startIndex:s=0,endIndex:r=0,matchLimit:a=4294967295,maxStartDepth:o=4294967295}={}){if(\"number\"!=typeof a)throw new Error(\"Arguments must be numbers\");marshalNode(e),C._ts_query_matches_wasm(this[0],e.tree[0],t.row,t.column,_.row,_.column,s,r,a,o);const n=getValue(TRANSFER_BUFFER,\"i32\"),l=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),d=getValue(TRANSFER_BUFFER+2*SIZE_OF_INT,\"i32\"),u=new Array(n);this.exceededMatchLimit=Boolean(d);let m=0,c=l;for(let t=0;t<n;t++){const t=getValue(c,\"i32\");c+=SIZE_OF_INT;const _=getValue(c,\"i32\");c+=SIZE_OF_INT;const s=new Array(_);if(c=unmarshalCaptures(this,e.tree,c,s),this.textPredicates[t].every((e=>e(s)))){u[m]={pattern:t,captures:s};const e=this.setProperties[t];e&&(u[m].setProperties=e);const _=this.assertedProperties[t];_&&(u[m].assertedProperties=_);const r=this.refutedProperties[t];r&&(u[m].refutedProperties=r),m++}}return u.length=m,C._free(l),u}captures(e,{startPosition:t=ZERO_POINT,endPosition:_=ZERO_POINT,startIndex:s=0,endIndex:r=0,matchLimit:a=4294967295,maxStartDepth:o=4294967295}={}){if(\"number\"!=typeof a)throw new Error(\"Arguments must be numbers\");marshalNode(e),C._ts_query_captures_wasm(this[0],e.tree[0],t.row,t.column,_.row,_.column,s,r,a,o);const n=getValue(TRANSFER_BUFFER,\"i32\"),l=getValue(TRANSFER_BUFFER+SIZE_OF_INT,\"i32\"),d=getValue(TRANSFER_BUFFER+2*SIZE_OF_INT,\"i32\"),u=[];this.exceededMatchLimit=Boolean(d);const m=[];let c=l;for(let t=0;t<n;t++){const t=getValue(c,\"i32\");c+=SIZE_OF_INT;const _=getValue(c,\"i32\");c+=SIZE_OF_INT;const s=getValue(c,\"i32\");if(c+=SIZE_OF_INT,m.length=_,c=unmarshalCaptures(this,e.tree,c,m),this.textPredicates[t].every((e=>e(m)))){const e=m[s],_=this.setProperties[t];_&&(e.setProperties=_);const r=this.assertedProperties[t];r&&(e.assertedProperties=r);const a=this.refutedProperties[t];a&&(e.refutedProperties=a),u.push(e)}}return C._free(l),u}predicatesForPattern(e){return this.predicates[e]}disableCapture(e){const t=lengthBytesUTF8(e),_=C._malloc(t+1);stringToUTF8(e,_,t+1),C._ts_query_disable_capture(this[0],_,t),C._free(_)}didExceedMatchLimit(){return this.exceededMatchLimit}}function getText(e,t,_){const s=_-t;let r=e.textCallback(t,null,_);for(t+=r.length;t<_;){const s=e.textCallback(t,null,_);if(!(s&&s.length>0))break;t+=s.length,r+=s}return t>_&&(r=r.slice(0,s)),r}function unmarshalCaptures(e,t,_,s){for(let r=0,a=s.length;r<a;r++){const a=getValue(_,\"i32\"),o=unmarshalNode(t,_+=SIZE_OF_INT);_+=SIZE_OF_NODE,s[r]={name:e.captureNames[a],node:o}}return _}function assertInternal(e){if(e!==INTERNAL)throw new Error(\"Illegal constructor\")}function isPoint(e){return e&&\"number\"==typeof e.row&&\"number\"==typeof e.column}function marshalNode(e){let t=TRANSFER_BUFFER;setValue(t,e.id,\"i32\"),t+=SIZE_OF_INT,setValue(t,e.startIndex,\"i32\"),t+=SIZE_OF_INT,setValue(t,e.startPosition.row,\"i32\"),t+=SIZE_OF_INT,setValue(t,e.startPosition.column,\"i32\"),t+=SIZE_OF_INT,setValue(t,e[0],\"i32\")}function unmarshalNode(e,t=TRANSFER_BUFFER){const _=getValue(t,\"i32\");if(0===_)return null;const s=getValue(t+=SIZE_OF_INT,\"i32\"),r=getValue(t+=SIZE_OF_INT,\"i32\"),a=getValue(t+=SIZE_OF_INT,\"i32\"),o=getValue(t+=SIZE_OF_INT,\"i32\"),n=new Node(INTERNAL,e);return n.id=_,n.startIndex=s,n.startPosition={row:r,column:a},n[0]=o,n}function marshalTreeCursor(e,t=TRANSFER_BUFFER){setValue(t+0*SIZE_OF_INT,e[0],\"i32\"),setValue(t+1*SIZE_OF_INT,e[1],\"i32\"),setValue(t+2*SIZE_OF_INT,e[2],\"i32\"),setValue(t+3*SIZE_OF_INT,e[3],\"i32\")}function unmarshalTreeCursor(e){e[0]=getValue(TRANSFER_BUFFER+0*SIZE_OF_INT,\"i32\"),e[1]=getValue(TRANSFER_BUFFER+1*SIZE_OF_INT,\"i32\"),e[2]=getValue(TRANSFER_BUFFER+2*SIZE_OF_INT,\"i32\"),e[3]=getValue(TRANSFER_BUFFER+3*SIZE_OF_INT,\"i32\")}function marshalPoint(e,t){setValue(e,t.row,\"i32\"),setValue(e+SIZE_OF_INT,t.column,\"i32\")}function unmarshalPoint(e){return{row:getValue(e,\"i32\")>>>0,column:getValue(e+SIZE_OF_INT,\"i32\")>>>0}}function marshalRange(e,t){marshalPoint(e,t.startPosition),marshalPoint(e+=SIZE_OF_POINT,t.endPosition),setValue(e+=SIZE_OF_POINT,t.startIndex,\"i32\"),setValue(e+=SIZE_OF_INT,t.endIndex,\"i32\"),e+=SIZE_OF_INT}function unmarshalRange(e){const t={};return t.startPosition=unmarshalPoint(e),e+=SIZE_OF_POINT,t.endPosition=unmarshalPoint(e),e+=SIZE_OF_POINT,t.startIndex=getValue(e,\"i32\")>>>0,e+=SIZE_OF_INT,t.endIndex=getValue(e,\"i32\")>>>0,t}function marshalEdit(e){let t=TRANSFER_BUFFER;marshalPoint(t,e.startPosition),t+=SIZE_OF_POINT,marshalPoint(t,e.oldEndPosition),t+=SIZE_OF_POINT,marshalPoint(t,e.newEndPosition),t+=SIZE_OF_POINT,setValue(t,e.startIndex,\"i32\"),t+=SIZE_OF_INT,setValue(t,e.oldEndIndex,\"i32\"),t+=SIZE_OF_INT,setValue(t,e.newEndIndex,\"i32\"),t+=SIZE_OF_INT}for(const e of Object.getOwnPropertyNames(ParserImpl.prototype))Object.defineProperty(Parser.prototype,e,{value:ParserImpl.prototype[e],enumerable:!1,writable:!1});Parser.Language=Language,Module.onRuntimeInitialized=()=>{ParserImpl.init(),resolveInitPromise()}})))}}return Parser}();\"object\"==typeof exports&&(module.exports=TreeSitter);\n", "// Dans server/src/server.ts\nimport { TextDocument } from 'vscode-languageserver-textdocument';\nimport {\n    createConnection,\n    ProposedFeatures, \n    TextDocuments, \n    InitializeParams,\n    ServerCapabilities,\n    TextDocumentSyncKind,\n    DefinitionParams, \n    RenameParams,\n    WorkspaceEdit\n} from 'vscode-languageserver/node';\n\n\nimport { AnalysisManager } from './AnalysisManager';\n\n\nconsole.error('[Server] Tamarin Language Server starting...');\nconst connection = createConnection(ProposedFeatures.all);\nconst documents: TextDocuments<TextDocument> = new TextDocuments(TextDocument);\n\nlet analysisManager: AnalysisManager;\n\n\nconnection.onInitialize(async (params: InitializeParams) => {\n    analysisManager = new AnalysisManager();\n    console.error('[Server] Received \"initialize\" request from client.');\n    const capabilities: ServerCapabilities = {\n        textDocumentSync: TextDocumentSyncKind.Full, \n        definitionProvider: true,\n        renameProvider: true,\n    };\n    console.error('[Server] Sending server capabilities back.');\n    return { capabilities };\n});\n\nconnection.onInitialized(() => {\n    console.error('[Server] Received \"initialized\" notification. Handshake complete!');\n});\n\ndocuments.onDidChangeContent(async (change) => {\n    console.error(`[Server] File changed: ${change.document.uri}. Triggering validation.`);\n    const diagnostics = await analysisManager.AnalyseDocument(change.document);\n\n    connection.sendDiagnostics({ uri: change.document.uri, diagnostics });\n    console.error(`[Server] Diagnostics sent for ${change.document.uri}.`);\n});\n\nconnection.onDefinition((params: DefinitionParams)=> {\n    if (!analysisManager) return null;\n    console.error(`[Server] Received 'onDefinition' request for ${params.textDocument.uri}.`);\n    const document = documents.get(params.textDocument.uri);\n    if (!document) {\n        console.error(`[Server] Document not found: ${params.textDocument.uri}`);\n        return null;\n    }\n    return analysisManager.getDefinition(document, params.position);\n    }\n);\n\nconnection.onRenameRequest(async (params: RenameParams): Promise<WorkspaceEdit | null> => {\n    if (!analysisManager){\n        return null;\n    }\n    console.error(`[Server] Received 'onRenameRequest' for ${params.textDocument.uri} at position ${params.position.line}:${params.position.character}.`);\n    const document = documents.get(params.textDocument.uri);\n    if (!document) {\n        console.error(`[Server] Document not found: ${params.textDocument.uri}`);\n        return null;\n    }\n    return analysisManager.handleRenameRequest(document, params.position, params.newName)\n});\n\n\ndocuments.onDidClose(event => {\n    console.error(`[Server] Document closed: ${event.document.uri}. Cleaning up state.`);\n    if (analysisManager) {\n        analysisManager.handleDocumentClose(event.document.uri);\n    }\n});\n\n\n\ndocuments.listen(connection);\nconnection.listen();", "import Parser =require( \"web-tree-sitter\");\nimport { Diagnostic , DiagnosticSeverity ,Range , Position} from 'vscode-languageserver';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport {build_error_display} from './checks/utils'\n\n// TODO , pattern matching ? \n//given an node returns his index in his father's children list \nfunction get_child_index(node : Parser.SyntaxNode): number|null{\n    if(node.parent === null ){\n        return null;\n    }\n    const children = node.parent.children;\n    for (let i = 0; i < children.length; i++) {\n      if (children[i].id === node.id) {\n        return i >= 0 ? i : null;\n      }\n    }\n    return 0;\n\n}\n\n/* Function used to detect syntax errors sent by the parser with MISSING or ERROR nodes,\nI tried to personnalize error messages according to the different cases\nI did the most common ones*/\nexport async function detect_errors(tree:Parser.SyntaxNode,document: TextDocument): Promise<{diagnostics: Diagnostic[] }> {\n    let diags: Diagnostic[] = [];\n\n    // This is where i tried to detect particular cases for syntax errors based on nodes position \n    function typesOfError(node : Parser.SyntaxNode){\n        if(node.grammarType === 'theory' || node.nextSibling?.nextSibling?.grammarType === 'begin' || node.nextSibling?.grammarType === 'begin'){\n            diags.push(build_error_display(node, document,\"MISSING 'theory' or 'begin'\"))\n        }\n        else if(node.firstChild?.grammarType === \"builtins\" || node.firstChild?.grammarType === \"functions\" || node.firstChild?.grammarType === \"macros\" ){\n            diags.push(build_error_display(node, document,\"MISSING ':' \"));\n        }\n        else if ( node.nextSibling?.grammarType === 'built_in'){\n            diags.push(build_error_display(node, document,\"MISSING ',' \"));   \n        }\n        else if(node.firstChild?.grammarType === \"rule\" && (node.firstChild.nextSibling?.grammarType != \"ident\" || node.firstChild.nextSibling?.nextSibling?.grammarType != \":\") ){\n            diags.push(build_error_display(node,document , \"MISSING ':' or rule name \"));\n        }\n        else if(node.firstChild?.grammarType === \"lemma\"){\n            diags.push(build_error_display(node,document, \"MISSING ':' or lemma name \"));\n        }\n        else if (node.firstChild?.grammarType === \"premise\" || (node.firstChild?.grammarType === \"rule\" && (node.firstChild.nextSibling?.grammarType === \"ident\" || node.firstChild.nextSibling?.nextSibling?.grammarType === \":\"))){\n            diags.push(build_error_display(node,document, \"ERROR in rule structure the syntax for a rule is either \\n []-->[] \\n or \\n []--[]->[]\"))\n        }\n        else if(node.firstChild?.grammarType === \"pre_defined\"){\n            diags.push(build_error_display(node,document, \"MISSING generalized quantifier\"));\n        }\n        else if (node.firstChild?.grammarType === \"nested_formula\" || node.firstChild?.grammarType === \"action_constraint\" || node.firstChild?.grammarType === \"conjunction\"){\n            diags.push(build_error_display(node,document, \"EXPECTING '&', '\u2227', '|', '\u2228', '==>'\"));\n        }\n        else {\n            diags.push(build_error_display(node,document, node.toString().slice(1,-1)));\n        }\n    }\n\n    function rangeContains(range: Range, pos: Position): boolean {\n        if (pos.line < range.start.line || pos.line > range.end.line) return false;\n        if (pos.line === range.start.line && pos.character < range.start.character) return false;\n        if (pos.line === range.end.line && pos.character > range.end.character) return false;\n    return true;\n}\n    function findMatches(node : Parser.SyntaxNode) {\n        if ((node.isMissing)) {\n            let myId = get_child_index(node);\n            if(myId === null){\n                return ;\n            }\n            if(node.parent?.child(myId-1)?.type === 'single_comment'){\n                let start ;\n                if(node.parent.child(myId-2) != null ){\n                    start = node.parent.child(myId-2)?.endIndex;\n                }\n                else {\n                    start = 0\n                }\n                let positionStart = document.positionAt(start?? 0);\n                const range = Range.create(positionStart, Position.create(positionStart.line, positionStart.character + 1));\n                const existingDiag = diags.find(d => rangeContains(d.range, positionStart));\n                if (!existingDiag) {\n                    diags.push({\n                        range,\n                        message: node.toString().slice(1, -1),\n                        severity: DiagnosticSeverity.Error,\n                        source: \"tamarin\"\n                    });\n                }\n            }\n            else {\n            diags.push(build_error_display(node ,document,node.toString().slice(1,-1)));\n            }\n        }\n        else if (node.isError){\n            if (node.firstChild && node.firstChild.grammarType === \"multi_comment\") {\n                const childNode = node.child(1);\n                if (childNode) {\n                  typesOfError(childNode);\n                }\n            } \n            else {\n                typesOfError(node);\n            }\n            return;\n        }\n        else if (node.grammarType === 'end'){\n        const endPosition = document.positionAt(node.endIndex);\n        const endOfDocumentPosition = document.positionAt(document.getText().length);\n        const unreachableRange = Range.create(endPosition, endOfDocumentPosition);\n        let hasContentAfterEnd = false;\n        const text = document.getText();\n        let inMultiLineComment = false;\n        for (let lineNum = endPosition.line + 1; lineNum <= endOfDocumentPosition.line; lineNum++) {\n            const line = text.split('\\n')[lineNum];\n            if (!inMultiLineComment) {\n                if (line.trim().startsWith('/*')) {\n                    inMultiLineComment = true;\n                } else if (line.trim() !== '' && !line.trim().startsWith('//')) {\n                    hasContentAfterEnd = true;\n                    break;\n                }\n            } else {\n                if (line.trim().endsWith('*/')) {\n                    inMultiLineComment = false;\n                }\n            }\n        }\n        if (hasContentAfterEnd) {\n            const message = \"Code unreachable\";\n            const severity = DiagnosticSeverity.Warning;\n            diags.push({\n                range: unreachableRange,\n                message,\n                severity,\n                source: \"tamarin\"\n            });\n        } \n        }\n        // Iterate over all the AST\n        for (let child of node.children) {\n            findMatches(child);\n        }\n    }\n    findMatches(tree);\n    return {diagnostics: diags };\n}\n", "import Parser = require(\"web-tree-sitter\");\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic , DiagnosticSeverity ,Range} from 'vscode-languageserver';\n\n\nexport function build_error_display(node : Parser.SyntaxNode, document: TextDocument, message : string): Diagnostic{\n    const start = document.positionAt(node.startIndex);\n    const end = document.positionAt(node.endIndex > node.startIndex ? node.endIndex : node.startIndex + 1);\n    return{\n        range: Range.create(start, end),\n        message,\n        severity: DiagnosticSeverity.Error,\n        source: \"tamarin\"\n    }\n}\n\nexport function build_warning_display(node : Parser.SyntaxNode, document: TextDocument, message : string): Diagnostic{\n    const start = document.positionAt(node.startIndex);\n    const end = document.positionAt(node.endIndex > node.startIndex ? node.endIndex : node.startIndex + 1);\n    return {\n        range: Range.create(start, end),\n        message,\n        severity: DiagnosticSeverity.Warning,\n        source: \"tamarin\"\n    }\n}\n\nexport function getName(node : Parser.SyntaxNode| null, document: TextDocument): string {\n    if (node && node.isNamed) {\n        return document.getText(Range.create(\n            document.positionAt(node.startIndex),\n            document.positionAt(node.endIndex)\n        ));\n    } else {\n        return \"None\";\n    }\n}\n\n\n/* Function used to compare the distance between two strings,\n returns the minimum operations required to convert the first string into the second one */\nexport function levenshteinDistance(s1: string , s2 : string): number {\n    const matrix = [];\n\n    // increment along the first column of each row\n    for (let i = 0; i <= s2.length; i++) {\n        matrix[i] = [i];\n    }\n\n    // increment each column in the first row\n    for (let j = 0; j <= s1.length; j++) {\n        matrix[0][j] = j;\n    }\n\n    // Fill in the rest of the matrix\n    for (let i = 1; i <= s2.length; i++) {\n        for (let j = 1; j <= s1.length; j++) {\n            if (s2.charAt(i - 1) === s1.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            } else {\n                matrix[i][j] = Math.min(\n                    matrix[i - 1][j - 1] + 1, // substitution\n                    Math.min(\n                        matrix[i][j - 1] + 1, // insertion\n                        matrix[i - 1][j] + 1 // deletion\n                    )\n                );\n            }\n        }\n    }\n\n    return matrix[s2.length][s1.length];\n}\n\n// Function to get the grammar type of a node \nexport function get_child_grammar_type(node :Parser.SyntaxNode): string[]{\n    let results : string[] = []\n    for(let child of node.children) {\n        results.push(child.grammarType)\n    }\n    return results;\n}", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n", "import Parser = require(\"web-tree-sitter\");\nimport { Range} from 'vscode-languageserver/node';\n\n// Contains every node types used to detect symbols.\nexport enum DeclarationType{\n    CCLVariable = 'conclusion_variable',\n    PRVariable = 'premise_variable',\n    ActionFVariable = 'action_fact_variable',\n    LemmaVariable = 'lemma_variable',\n    LMacroVariable = 'left_macro_variable',\n    RMacroVariable = 'right_macro_variable',\n    LEquationVariable  = 'left_equation_variable',\n    REquationVariable  = 'right_equation_variable',\n    RestrictionVariable = 'restriction_variable',\n\n    Builtins = 'built_ins',\n    Functions = 'functions',\n    Macros = 'macros',\n    Equations = 'equations',\n    QF = 'quantified_formula',\n    NF = 'nested_formula',\n    Let  = 'let',\n    Rule_let_block = \"rule_let_block\",\n    ActionF = 'action_fact',\n    Conclusion = 'conclusion',\n    Premise = 'premise',\n\n\n    Lemma = 'lemma',\n    Restriction = 'restriction',\n    Rule = 'rule',\n    Theory = 'theory',\n    PubVar = 'pub_var',\n    MVONF = 'msg_var_or_nullary_fun',\n    TMPV = 'temporal_var',\n    FUNCP = 'function_pub',\n    FUNCPR = 'function_private',\n    FUNCD = 'function_destructor',\n    FUNCUST = 'function_custom',\n    Builtin = 'built_in',\n    LinearF = 'linear_fact',\n    PersistentF =  'persistent_fact', \n    NARY = 'nary_app',\n    DEFAULT = 'default',\n    Macro = 'macro',\n    Equation = 'equation'\n};\n\nexport enum variable_types{\n    PUB = '$',\n    FRESH = '~',\n    NAT = '%',\n    TEMP = '#'\n}\n\n\nexport type TamarinSymbol = {\n    node : Parser.SyntaxNode\n    declaration : DeclarationType\n    context : Parser.SyntaxNode\n    name ?:  string \n    name_range : Range\n    arity ?: number\n    type ?: string\n    associated_qf ?: Parser.SyntaxNode\n};", "import { DeclarationType} from \"./tamarinTypes\";\nimport Parser = require(\"web-tree-sitter\");\nimport { Range, Position } from 'vscode-languageserver/node';\n\n\n/* Function used to find all variables given a  tree node it will search through all sons,\nused to find lemma or rule vars for example  */ \nexport function find_variables(node : Parser.SyntaxNode): Parser.SyntaxNode[]{\n    let vars : Parser.SyntaxNode[] = []\n    if( node.grammarType === DeclarationType.MVONF && node.parent?.grammarType === DeclarationType.Equation){\n        vars.push(node)\n        return vars\n    }\n       \n    for( let child of node.children){\n\n         //This is used to skip errors in proof methods modify it if you want to manage proof methods\n         if(child.grammarType === \"proof_method\"){\n            continue;\n        }\n\n        if(child.grammarType === 'pub_var' ||child.grammarType === 'fresh_var' || child.grammarType === DeclarationType.MVONF ||child.grammarType === 'nat_var'|| child.grammarType === 'temporal_var'){\n            vars.push(child)\n            vars = vars.concat(find_variables(child));\n        }\n        else{\n            vars = vars.concat(find_variables(child));\n        }\n    }  \n    return vars;  \n}\n\n/* Same as the above function but for facts or functions*/\nexport function find_linear_fact(node : Parser.SyntaxNode): Parser.SyntaxNode[]{\n    let vars : Parser.SyntaxNode[] = []\n    for( let child of node.children){\n\n        //This is used to skip errors in proof methods modify it if you want to manage proof methods\n        if(child.grammarType === \"proof_method\"){\n            continue;\n        }\n        \n        if(child.grammarType === DeclarationType.LinearF || child.grammarType === DeclarationType.NARY || child.grammarType === DeclarationType.PersistentF){\n            vars.push(child)\n            vars = vars.concat(find_linear_fact(child));\n        }\n        else{\n            vars = vars.concat(find_linear_fact(child));\n        }\n    }  \n    return vars;  \n}\n\nexport function find_narry(node : Parser.SyntaxNode): Parser.SyntaxNode[]{\n    let vars : Parser.SyntaxNode[] = []\n    for( let child of node.children){\n        if(child.grammarType === DeclarationType.NARY){\n            vars.push(child)\n            vars = vars.concat(find_linear_fact(child));\n        }\n        else{\n            vars = vars.concat(find_linear_fact(child));\n        }\n    }  \n    return vars;  \n}\n\n/* Given a function or fact node returns his arity*/\nexport function get_arity(node : Parser.SyntaxNode[]|undefined): number{\n    let arity: number = 0;\n    if(node)\n    for (let arg of node){\n        if(arg.type !== \",\"){\n            arity ++;\n        }\n    } \n    return arity;\n}\n\n/* Same as above but for macros */\nexport function get_macro_arity(node : Parser.SyntaxNode[]|undefined): number{\n    let arity: number = -1;\n    if(node)\n    for (let arg of node){\n        if(arg.type === \"=\"){\n            break\n        }\n        if(arg.type !== \",\" && arg.type !== \"(\" && arg.type !== \")\" ){\n            arity ++;\n        }\n    } \n    return arity;\n}\nexport function get_range(node: Parser.SyntaxNode): Range {\n    const startPosition: Position = {\n        line: node.startPosition.row,\n        character: node.startPosition.column\n    };\n    \n    const endPosition: Position = {\n        line: node.endPosition.row,\n        character: node.endPosition.column\n    };\n\n    return { start: startPosition, end: endPosition };\n}", "export const ReservedFacts: string[] = ['Fr','In','Out','KD','KU','K','diff'] ;\n\n//List of existing builtins add new ones if necessary\nexport const ExistingBuiltIns : string[] = \n[\n    'diffie-hellman',\n    'hashing',\n    'symmetric-encryption',\n    'asymmetric-encryption',\n    'signing',\n    'revealing-signing',\n    'bilinear-pairing',\n    'xor',\n    'default',\n]\n\n//First the name and then the arity also mind the order above (inv and 1 are diffie-hellman functions etc \u2026)\nexport const AssociatedFunctions: string[][] = \n[\n['inv','1', '1', '0'],\n['h', '1'],\n['sdec', '2', 'senc', '2'],\n['aenc', '2', 'adec', '2', 'pk', '1'],\n['sign', '2', 'verify', '3', 'pk', '1', 'true', '0'],\n['revealSign', '2', 'revealVerify', '3', 'getMessage', '1', 'pk', '1', 'true', '0'],\n['pmult', '2', 'em', '2'],\n['XOR', '2', 'zero', '0'],\n['fst', '1', 'snd', '1', 'pair', '2']\n]\n", "import Parser = require(\"web-tree-sitter\");\nimport { get_arity} from '../../symbol_table/utils';\nimport { TextDocument  } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic} from 'vscode-languageserver';\nimport { build_error_display, build_warning_display, getName } from './utils';\nimport { ReservedFacts } from \"../../symbol_table/tamarinConstants\";\nimport { DeclarationType} from \"../../symbol_table/tamarinTypes\";\n\n/* Function used to perform checks on all reserved facts,\n checks if they are in the wright place and used with the correct arity */\nexport function check_reserved_facts(node : Parser.SyntaxNode, editor : TextDocument): Diagnostic[] {\n    const diags: Diagnostic[] = [];\n    for(let child of node.children){\n        if(child.grammarType === DeclarationType.LinearF ||child.grammarType === DeclarationType.PersistentF){\n            const fact_name = getName(child.child(0), editor);\n            if(fact_name === ReservedFacts[0]){\n                if(node.grammarType === 'conclusion'){\n                    diags.push(build_warning_display(child, editor,  \"Fr fact cannot be used in conclusion of a rule\"));\n                }\n                if( child.child(2)?.children && get_arity(child.child(2)?.children) !== 1){\n                    diags.push(build_error_display(child, editor, \"Error: incorrect arity for Fr fact, only 1 argument expected\"))\n                }\n            }\n            else if(fact_name === ReservedFacts[1]){\n                if(node.grammarType === 'conclusion'){\n                    diags.push(build_warning_display(child, editor,  \"In fact cannot be used in conclusion of a rule\"));\n                }\n                if(child.child(2)?.children && get_arity(child.child(2)?.children) !== 1){\n                    diags.push(build_error_display(child, editor, \"Error: incorrect arity for In fact, only 1 argument expected\"))\n                }\n            }\n            else if(fact_name === ReservedFacts[2]){\n                if( node.grammarType === 'premise'){\n                    diags.push(build_warning_display(child, editor,  \"Out fact cannot be used in premise of a rule\"));\n                }\n                if(child.child(2)?.children && get_arity(child.child(2)?.children) !== 1){\n                    diags.push(build_error_display(child, editor, \"Error: incorrect arity for Out fact, only 1 argument expected\"))\n                }\n            }\n            else if((fact_name === ReservedFacts[3] || fact_name === ReservedFacts[4] || fact_name === ReservedFacts[5]) && node.parent?.grammarType === 'simple_rule' ){\n                diags.push(build_warning_display(child, editor,  \"You are not supposed to use KD KU or action K in a rule \"));\n            }\n            else if( fact_name === ReservedFacts[6]){\n                if(get_arity(child.child(2)?.children) != 2){\n                    diags.push(build_error_display(child, editor, \"Error : incorrect arity for diff fact, 2 arguments expected\"))\n                }\n            }\n        }\n        else if (child.grammarType === 'nary_app'){\n            const fact_name_node = child.child(0);\n            if (fact_name_node !== null && fact_name_node !== undefined) {\n                const fact_name = getName(fact_name_node, editor);\n                if(fact_name === ReservedFacts[6]){\n                    if(node.grammarType === DeclarationType.Equation || node.grammarType === 'mset_term'){\n                        diags.push(build_warning_display(child, editor , \"Warning  :  diff fact cannot be used in an equation\"))\n                    }\n                }\n            }\n        }\n        else {\n            diags.push(...check_reserved_facts(child, editor));\n        }\n    }\n    return diags;\n    \n};", "import { TextDocument } from \"vscode-languageserver-textdocument\";\nimport Parser = require(\"web-tree-sitter\");\nimport { Range} from 'vscode-languageserver/node';\nimport { check_reserved_facts} from '../features/checks/checkReservedFacts';\nimport {getName} from '../features/checks/utils'\nimport { Diagnostic } from \"vscode-languageserver-types\";\nimport { ReservedFacts, ExistingBuiltIns , AssociatedFunctions} from \"./tamarinConstants\";\nimport { DeclarationType, TamarinSymbol} from \"./tamarinTypes\";\nimport { find_variables, find_narry , find_linear_fact,get_arity,get_macro_arity,get_range } from \"./utils\";\n\nexport type CreateSymbolTableResult = {\n    symbolTable: TamarinSymbolTable\n};\n\n\n/* Function used to register the symbol table for each file */ \n\nexport const createSymbolTable = async (root: Parser.SyntaxNode, document: TextDocument): Promise<{ symbolTable: TamarinSymbolTable, diags: Diagnostic[] }> => {\n    let diags: Diagnostic[] = []; \n    const symbolTableVisitor = new SymbolTableVisitor();\n    const symbolTable =  await  symbolTableVisitor.visit(root, document, diags);\n    symbolTable.setRootNodedocumentDiags(root, document, diags);\n    convert_linear_facts(symbolTable);\n    return {symbolTable,diags};\n};\n\n/* Given the tree structure persistent facts are just linear facts with a ! as left sibling \nfunction used to set the right type */\nfunction convert_linear_facts(ts : TamarinSymbolTable){\n    for (let symbol of ts.getSymbols()){\n        if(symbol.declaration === DeclarationType.LinearF && symbol.node.previousSibling?.grammarType === \"!\"){\n            symbol.declaration = DeclarationType.PersistentF;\n            \n        }\n    }\n}\n\n\nfunction convert(grammar_type : string) : DeclarationType{\n    if(grammar_type === 'nary_app'){return DeclarationType.NARY}\n    else if(grammar_type === 'linear_fact'){return DeclarationType.LinearF}\n    else{return DeclarationType.DEFAULT};\n}\n\nclass SymbolTableVisitor{\n    constructor(\n    private readonly symbolTable : TamarinSymbolTable = new TamarinSymbolTable() ,\n    private context: undefined | Parser.Tree = undefined){\n        this.context = context\n    };\n    private visitcounter : number = 0; // Used to add fst snd and pair symbols only once\n    \n    protected defaultResult(): TamarinSymbolTable {\n        return this.symbolTable;\n    };\n\n    /* Method that builds the symbol table adding every symbols while visiting the AST*/\n    public async visit(root : Parser.SyntaxNode, document: TextDocument, diags: Diagnostic[]): Promise<TamarinSymbolTable>{\n        //Include default functions but the neither the nodes or the name range are correct\n        if(this.visitcounter === 0){\n            this.visitcounter ++ ;\n            for (let k = 0 ; k < AssociatedFunctions[AssociatedFunctions.length - 1].length; k += 2){\n                this.registerfucntion(root, DeclarationType.Functions, AssociatedFunctions[AssociatedFunctions.length - 1][k], parseInt(AssociatedFunctions[AssociatedFunctions.length - 1][k+1]), root, get_range(root));\n            }\n        }\n\n        for (let i = 0; i < root.children.length; i++){\n            const child = root.child(i);\n\n            if (!child) {continue;}\n\n            if((child?.grammarType === DeclarationType.Lemma && (root.grammarType === 'lemma'|| root.grammarType === 'diff_lemma') && root.parent !== null && child?.nextSibling)){\n                this.registerident(root, DeclarationType.Lemma, getName(child?.nextSibling, document), root.parent ,get_range(child?.nextSibling))\n                this.register_facts_searched(root, document, root, DeclarationType.ActionF);\n                this.register_vars_lemma(root, DeclarationType.LemmaVariable, document)\n            }\n            else if (child?.grammarType === DeclarationType.Restriction && root.grammarType === 'restriction' && root.parent !== null && child?.nextSibling){\n                this.registerident(root, DeclarationType.Restriction, getName(child?.nextSibling, document), root.parent ,get_range(child?.nextSibling))\n                this.register_facts_searched(root, document, root);\n                this.register_vars_lemma(root, DeclarationType.RestrictionVariable, document)\n            }\n            else if (child?.grammarType === DeclarationType.Rule && root.grammarType === 'simple_rule' && root.parent !== null && child?.nextSibling){\n                this.registerident(root, DeclarationType.Rule, getName(child.nextSibling, document), root.parent, get_range(child.nextSibling))\n                diags.push(...check_reserved_facts(root, document));\n            }\n            else if (child?.grammarType === DeclarationType.QF){\n               continue;\n            }\n            else if(child?.grammarType === DeclarationType.NF){\n                continue;\n            }\n            else if(child?.grammarType === DeclarationType.Functions ){\n                for (let grandchild of child.children){\n                    if(grandchild.grammarType === DeclarationType.FUNCP || grandchild.grammarType === DeclarationType.FUNCPR || grandchild.grammarType === DeclarationType.FUNCD || grandchild.grammarType === DeclarationType.FUNCUST){\n                        const funcNameNode = grandchild.child(0);\n                        if (funcNameNode) {\n                            this.registerfucntion(grandchild, DeclarationType.Functions, getName(grandchild.child(0),document), parseInt(getName(grandchild.child(2),document)), root, get_range(funcNameNode));\n                        }\n                    }\n                    else if(grandchild.grammarType === 'function_untyped' && grandchild.child(0) !== null) {\n                        const funcName = getName(grandchild.child(0), document);\n                        const arity = parseInt(getName(grandchild.child(2), document));\n                        const funcNode = grandchild.child(0);\n                        if (funcNode) {\n                            this.registerfucntion(grandchild, DeclarationType.Functions, funcName, arity, root, get_range(funcNode));\n                        }\n                    }\n                }\n            }\n            else if( child?.grammarType === DeclarationType.Macros || child?.grammarType === DeclarationType.Equations){\n                for(let grandchild of child.children){\n                    if(grandchild.grammarType === DeclarationType.Macro){\n                        const macroNameNode = grandchild.child(0);\n                        if (macroNameNode) {\n                            this.registerfucntion(grandchild, DeclarationType.Macro, getName(macroNameNode, document), get_macro_arity(grandchild.children), root, get_range(macroNameNode));\n                        }\n                        this.register_facts_searched(grandchild, document, grandchild, DeclarationType.NARY)\n                        let eqcount = 0  ;                \n                        for(let ggchild of grandchild.children){\n                            if(ggchild.grammarType === \"=\"){\n                                eqcount ++ ;\n                            }\n                            if(eqcount === 0){\n                                this.register_vars_left_macro_part(ggchild, DeclarationType.LMacroVariable, document, grandchild);\n                            }\n                            else{\n                                this.register_vars_rule(ggchild, DeclarationType.RMacroVariable, document, grandchild);\n                    \n                            }\n                        }\n                    }\n                    else if (grandchild.grammarType === DeclarationType.Equation){ \n                        diags.push(...check_reserved_facts(grandchild, document))\n                        this.register_facts_searched(grandchild, document, grandchild, DeclarationType.NARY);   \n                        let eqcount = 0  ;                \n                        for(let ggchild of grandchild.children){\n                            if(ggchild.grammarType === \"=\"){\n                                eqcount ++ ;\n                                continue;\n                            }\n                            if(eqcount === 0){\n                                this.register_vars_rule(ggchild, DeclarationType.LEquationVariable, document, grandchild);\n                            }\n                            else{\n                                this.register_vars_rule(ggchild, DeclarationType.REquationVariable, document, grandchild);\n\n                            }\n                            \n                        }\n                    }\n\n                }\n            }\n            else if (child?.grammarType === DeclarationType.Builtins){\n                let pkcount = 0;\n                for (let grandchild of child.children){\n                    if(grandchild.grammarType === DeclarationType.Builtin && grandchild.child(0) !== null){\n                        const builtinType = grandchild.child(0)?.grammarType ?? '';\n                        this.registerident(grandchild, DeclarationType.Builtin, builtinType, root, get_range(grandchild));\n                        const built_in_index = ExistingBuiltIns.indexOf(builtinType);\n                        if(built_in_index >= 0){\n                            for (let k = 0 ; k < AssociatedFunctions[built_in_index].length; k += 2){\n                                if(AssociatedFunctions[built_in_index][k] === 'pk' && pkcount > 1){\n                                    break;\n                                }\n                                this.registerfucntion(grandchild, DeclarationType.Functions, AssociatedFunctions[built_in_index][k], parseInt(AssociatedFunctions[built_in_index][k+1]), root, get_range(grandchild));\n                            }\n                        }\n                        if(builtinType === 'asymmetric-encryption'|| builtinType ==='signing'|| builtinType ==='revealing-signing'){ pkcount ++ }\n                    }\n                    \n                }\n            }\n            else if(child?.grammarType === DeclarationType.ActionF){\n                for (let grandchild of child.children){\n                    if(grandchild.grammarType === DeclarationType.LinearF && grandchild.child(2) !== null ){\n                        const args = grandchild.child(2)?.children;\n                        if(args){\n                            let arity: number = get_arity(args)\n                        const node = grandchild.child(0);\n                        if(node){\n                            this.registerfucntion(grandchild, DeclarationType.ActionF, getName(grandchild.child(0), document), arity, root, get_range(node))\n                        }\n                    }\n                    }\n                }\n                this.register_narry(child, document, root)\n                this.register_vars_rule(child, DeclarationType.ActionFVariable, document, root)        \n            }\n            else if(child?.grammarType === DeclarationType.Conclusion){\n                this.register_facts_searched(child, document, root);\n                this.register_vars_rule(child, DeclarationType.CCLVariable, document, root)\n            }\n            else if (child?.grammarType === DeclarationType.Premise){\n                this.register_facts_searched(child, document, root);\n                this.register_vars_rule(child, DeclarationType.PRVariable, document, root);\n            }\n            else if( child?.grammarType === DeclarationType.Rule_let_block){\n                this.register_vars_rule(child, DeclarationType.PRVariable, document, root)\n            }\n            else{\n                if(child !== null){\n                    await this.visit(child, document, diags);\n                }\n            }\n        }\n        return this.symbolTable\n    };\n\n    //Method used to register vars found by find variables function \n    private register_vars_rule(node :Parser.SyntaxNode, type : DeclarationType, document : TextDocument, root : Parser.SyntaxNode){\n        let vars: Parser.SyntaxNode[] = find_variables(node);\n                for(let k = 0; k < vars.length; k++){\n                    if(vars[k].grammarType === DeclarationType.MVONF){\n                        let isregistered = false\n                        for(let symbol of this.symbolTable.getSymbols()){\n                            if(symbol.declaration === DeclarationType.Functions){\n                                if(symbol.name === getName(vars[k], document)){\n                                    isregistered = true;\n                                    this.registerfucntion(vars[k], DeclarationType.NARY, symbol.name,0,root, get_range(vars[k]) )\n                                }\n                            }\n                            else {continue;}\n                        }\n                        const nameNode = vars[k].child(0);\n                        if(! isregistered && nameNode){\n                            this.registerident(vars[k], type, getName(vars[k].child(0), document),root, get_range(nameNode))\n                        }\n                    }\n                    else{\n                        const nameNode = vars[k].child(1);\n                        if(nameNode){\n                            this.registerident(vars[k], type, getName(vars[k].child(1), document),root, get_range(nameNode), vars[k].child(0)?.grammarType)\n                        }\n                    }\n                }\n    }\n\n\n    private register_vars_left_macro_part(node :Parser.SyntaxNode, type : DeclarationType, document : TextDocument, root : Parser.SyntaxNode){\n        if(node.grammarType === DeclarationType.MVONF){\n            let isregistered = false\n                        for(let symbol of this.symbolTable.getSymbols()){\n                            if(symbol.declaration === DeclarationType.Functions){\n                                if(symbol.name === getName(node, document)){\n                                    isregistered = true;\n                                    this.registerfucntion(node, DeclarationType.NARY, symbol.name,0,root, get_range(node) )\n                                }\n                            }\n                            else {continue;}\n                        }\n                        if(! isregistered){\n                            const nameNode = node.child(0);\n                            if(nameNode){\n                                this.registerident(node, type, getName(node.child(0), document),root, get_range(nameNode))\n                            }\n                        }\n        }\n        else if (node.grammarType === 'pub_var' ||node.grammarType === 'fresh_var' || node.grammarType === 'nat_var'|| node.grammarType === 'temporal_var'){\n            const nameNode = node.child(1);\n            if(nameNode){\n                this.registerident(node, type, getName(node.child(1), document),root, get_range(nameNode), node.child(0)?.grammarType)\n            }\n        }\n    }\n\n    private register_vars_lemma(node :Parser.SyntaxNode, type : DeclarationType, document : TextDocument){\n        let vars: Parser.SyntaxNode[] = find_variables(node);\n        for(let k = 0; k < vars.length; k++){\n            let context: Parser.SyntaxNode = vars[k];\n            while(context.grammarType !== DeclarationType.NF  && context.grammarType !== 'conjunction' && context.grammarType !== 'disjunction' && (context.grammarType !== DeclarationType.Lemma && context.grammarType !== DeclarationType.Restriction && context.grammarType !== 'diff_lemma') ){\n                if(context.parent){\n                    context = context.parent;\n                }\n            }\n            if(vars[k].parent !== null){\n                if(vars[k].grammarType === DeclarationType.MVONF ||  (vars[k].grammarType === DeclarationType.TMPV  && vars[k].children.length === 1)){\n                    let isregistered = false\n                    for(let symbol of this.symbolTable.getSymbols()){\n                        if(symbol.declaration === DeclarationType.Functions){\n                            if(symbol.name === getName(vars[k], document)){\n                                isregistered = true;\n                                this.registerfucntion(vars[k], DeclarationType.NARY, symbol.name,0,context, get_range(vars[k]) )\n                            }\n                        }\n                        else {continue;}\n                    }\n                    if(! isregistered){\n                        const nameNode = vars[k].child(0);\n                        if(nameNode){\n                            this.registerident(vars[k], type, getName(vars[k].child(0), document),context, get_range(nameNode))\n                        }\n                    }\n                }\n                else{\n                    const nameNode = vars[k].child(1);\n                    if(nameNode){\n                        this.registerident(vars[k], type, getName(vars[k].child(1), document),context,get_range(nameNode) ,  vars[k].child(0)?.grammarType)\n                    }\n                }\n            }\n        }\n    }\n\n    /* Function used to register the facts found with find_linear_fact*/\n    private register_facts_searched(node :Parser.SyntaxNode, document : TextDocument, root : Parser.SyntaxNode, type ?: DeclarationType){\n        let vars: Parser.SyntaxNode[] = find_linear_fact(node);\n        for(let k = 0; k < vars.length; k++){\n            const factName = getName(vars[k].child(0), document);\n            if(ReservedFacts.includes(factName)){\n                continue;\n            }\n            let isFunction = false;\n            for(let symbol of this.symbolTable.getSymbols()) {\n                if(symbol.declaration === DeclarationType.Functions && symbol.name === factName) {\n                    isFunction = true;\n                    if(vars[k].child(2) !== null){\n                        const args = vars[k].child(2)?.children;\n                        if(args){\n                            let arity: number = get_arity(args);\n                            const factNameNode = vars[k].child(0);\n                            if(factNameNode){\n                                this.registerfucntion(vars[k], DeclarationType.NARY, factName, arity, root, get_range(factNameNode));\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            if(isFunction) {\n                continue; \n            }\n            if(vars[k].child(2) !== null){\n                const args = vars[k].child(2)?.children;\n                if(args){\n                    let arity: number = get_arity(args);\n                    const factNameNode = vars[k].child(0);\n                    if(factNameNode){\n                    if(type){\n                            this.registerfucntion(vars[k], type, factName, arity, root, get_range(factNameNode));\n                        }\n                        else{\n                            this.registerfucntion(vars[k], convert(vars[k].grammarType), factName, arity, root, get_range(factNameNode));\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /* Same as above but for functions */\n    private register_narry(node :Parser.SyntaxNode, document : TextDocument, root : Parser.SyntaxNode){\n        let vars: Parser.SyntaxNode[] = find_narry(node);\n        for(let k = 0; k < vars.length; k++){\n            if(ReservedFacts.includes(getName(vars[k].child(0),document))){\n                continue;\n            }\n            const nodeName = vars[k].child(0);\n            if(nodeName){\n                if(node.child(2) !== null){\n                    const args = vars[k].child(2)?.children;\n                    if(args){\n                        let arity: number = get_arity(args);\n                        this.registerfucntion(vars[k], convert(vars[k].grammarType) , getName(vars[k].child(0),document),arity, root, get_range(nodeName));\n                    }\n                }\n                else{\n                    this.registerfucntion(vars[k], convert(vars[k].grammarType) , getName(vars[k].child(0),document),0, root, get_range(nodeName))\n\n                }\n            }\n        }\n    }\n\n\n    /* Same as above but for identifiers */\n    private registerident(ident : Parser.SyntaxNode|null|undefined, declaration: DeclarationType, name : string|undefined,  context : Parser.SyntaxNode, range : Range, type ?: string ){\n        if(!ident){\n            return;\n        }\n        this.symbolTable.addSymbol({\n            node : ident,\n            declaration:  declaration,\n            name : name,\n            context : context,\n            type : type, \n            name_range : range,\n        });\n\n    };\n\n    private registerfucntion(ident : Parser.SyntaxNode|null|undefined, declaration: DeclarationType, name : string, arity : number,  context : Parser.SyntaxNode , range : Range){\n        if(!ident){\n            return;\n        }\n        this.symbolTable.addSymbol({\n            node : ident,\n            declaration:  declaration,\n            name : name,\n            arity : arity,\n            context : context,\n            name_range : range\n        });\n\n    };\n\n    \n};\n\n\n\n\nexport function set_associated_qf(symbol : TamarinSymbol, node : Parser.SyntaxNode |null):void {\n    if(node){\n        symbol.associated_qf = node;\n    }\n}\n\nexport class TamarinSymbolTable{\n    private symbols : TamarinSymbol[] = [];\n\n    private root_node!: Parser.SyntaxNode;\n\n    public addSymbol(symbol: TamarinSymbol) {\n        this.symbols.push(symbol);\n    };\n\n    public getSymbols(): TamarinSymbol[] {\n        return this.symbols;\n    };\n\n    public setSymbols(symbols : TamarinSymbol[]): void{\n        this.symbols = symbols;\n    }\n\n    public getSymbol(int : number):TamarinSymbol{\n        return this.symbols[int];\n    };\n\n    public setRootNodedocumentDiags(root : Parser.SyntaxNode, document : TextDocument, diags : Diagnostic[]): void{\n        this.root_node = root;\n    }\n\n    public unshift(symbol: TamarinSymbol): void {\n        this.symbols.unshift(symbol);\n    }\n\n    public findSymbolByName(name: string): TamarinSymbol | undefined {\n        const primaryDeclarations = [\n            DeclarationType.Functions, \n            DeclarationType.Rule, \n            DeclarationType.Lemma, \n            DeclarationType.Restriction, \n            DeclarationType.Macro\n        ];\n        let symbol = this.symbols.find(s => \n            s.name === name && primaryDeclarations.includes(s.declaration)\n        );\n        if (symbol) {\n            return symbol;\n        }\n        return this.symbols.find(s => s.name === name);\n    }\n\n};\n", "import { build_error_display} from './utils';\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic} from 'vscode-languageserver';\nimport { DeclarationType} from \"../../symbol_table/tamarinTypes\";\n\n/* Function used to check if all variables with the same name  in a rule have the same type,\nAlso checks that if a variables is in the right side of a macro or equation it is also present in the left side  */\nexport function check_variables_type_is_consistent_inside_a_rule(symbol_table : TamarinSymbolTable, editor: TextDocument) : Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    for (let i = 0 ; i < symbol_table.getSymbols().length; i++){\n        let current_symbol = symbol_table.getSymbol(i);\n        if(current_symbol.declaration === DeclarationType.PRVariable || current_symbol.declaration === DeclarationType.CCLVariable || current_symbol.declaration === DeclarationType.ActionFVariable ){\n            for(let j = 0; j < symbol_table.getSymbols().length; j++){\n                if((current_symbol.declaration === DeclarationType.PRVariable || current_symbol.declaration === DeclarationType.CCLVariable || current_symbol.declaration === DeclarationType.ActionFVariable) && i !== j){\n                    if(current_symbol.context === symbol_table.getSymbol(j).context && current_symbol.name === symbol_table.getSymbol(j).name){\n                        if(current_symbol.type === symbol_table.getSymbol(j).type){\n                            continue;\n                        }\n                        else{\n                            const newDiag =build_error_display(current_symbol.node, editor, \"Error: inconsistent variables, variables with the same name in the same rule must have same types \");\n                            diags.push(newDiag);\n                            break;\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                else{\n                    continue;\n                }\n            }\n        }\n        // Check about the equation variables\n        else if (current_symbol.declaration === DeclarationType.REquationVariable){\n            let isbreak = false;\n            for (let symbol of symbol_table.getSymbols()){\n                if(symbol.declaration === DeclarationType.LEquationVariable && symbol.name === current_symbol.name && symbol.context === current_symbol.context){\n                    isbreak = true;\n                    break;\n                }\n            }\n            if (!isbreak){\n                const newDiag=build_error_display(current_symbol.node, editor, \"Error : this variable doesn't exist on the left side of the equation\")\n                diags.push(newDiag);\n            }\n        }\n        // Check about macro variables \n        else if (current_symbol.declaration === DeclarationType.RMacroVariable){\n            let isbreak = false;\n            if(current_symbol.type === '$'){\n                continue;\n            }\n            for (let symbol of symbol_table.getSymbols()){\n                if(symbol.declaration === DeclarationType.LMacroVariable && symbol.name === current_symbol.name && symbol.context === current_symbol.context){\n                    isbreak = true;\n                    break;\n                }\n            }\n            if (!isbreak){\n                const newDiag=build_error_display(current_symbol.node, editor, \"Error : this variable doesn't exist on the left side of the equation\")\n                diags.push(newDiag);\n            }\n        }\n        else{\n            continue;\n        }\n    }\n    return diags;\n};", "import { build_error_display} from './utils';\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic} from 'vscode-languageserver';\nimport { DeclarationType} from \"../../symbol_table/tamarinTypes\";\n\n/* Function used to check if a variable present in an action fact or conclusion is also present in premise,\nalso checks if a fact in premise appears in a conclusion somewhere else */ \nexport function check_variable_is_defined_in_premise(symbol_table : TamarinSymbolTable, editor: TextDocument): Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    for( let i = 0 ; i < symbol_table.getSymbols().length; i++){\n        let current_symbol = symbol_table.getSymbol(i);\n        if(current_symbol.type === '$'){continue};  // Do not take into account public variables\n        if(current_symbol.declaration === DeclarationType.CCLVariable || current_symbol.declaration === DeclarationType.ActionFVariable){\n            let current_context = current_symbol.context;\n            let is_break = false;\n            for (let j = 0; j < symbol_table.getSymbols().length; j++){\n                let searched_symbol = symbol_table.getSymbol(j);\n                if(j > i){break};\n                if(searched_symbol.context !== current_context || j == i){\n                    continue;\n                }\n                else{\n                    if(searched_symbol.name === current_symbol.name){\n                        is_break = true\n                        break;\n                    }\n                }\n            }\n            if(!is_break){\n                diags.push(build_error_display(current_symbol.node, editor, \"Error: this variable is used in the second part of the rule but doesn't appear in premise\"));\n            }\n        }\n        else if ((current_symbol.declaration === DeclarationType.LinearF || current_symbol.declaration === DeclarationType.PersistentF) && current_symbol.node.parent?.grammarType === DeclarationType.Premise){\n            let isbreak = false;\n            for (let symbol of symbol_table.getSymbols()){\n                if((symbol.declaration === DeclarationType.LinearF || symbol.declaration === DeclarationType.PersistentF ) && symbol.node.id !== current_symbol.node.id ){\n                    if(symbol.node.parent?.grammarType === DeclarationType.Conclusion && symbol.name === current_symbol.name){\n                        isbreak = true\n                        break ;\n                    }\n                }\n            }\n            if(!isbreak){\n                diags.push(build_error_display(current_symbol.node, editor, \"Error : fact occur in premise but never in any conclusion \"))\n            }\n        }\n    }\n    return diags\n}", "import { build_error_display} from './utils';\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic} from 'vscode-languageserver';\nimport { DeclarationType,TamarinSymbol} from \"../../symbol_table/tamarinTypes\";\n\n/* This function performs various checks on action facts : wether they are declared ord not and if the arity is correct */ \nexport function check_action_fact(symbol_table : TamarinSymbolTable, editor: TextDocument): Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    let actionFacts: TamarinSymbol[] = [];\n    let errors : string[] = []\n    for( let i = 0 ; i < symbol_table.getSymbols().length; i++){\n        let current_symbol = symbol_table.getSymbol(i);\n        if(current_symbol.declaration === DeclarationType.ActionF && current_symbol.context?.grammarType !== 'simple_rule'){\n            let found_one = false;\n            for(let j = 0; j < actionFacts.length; j++){\n                if(actionFacts[j].name === current_symbol.name){\n                    found_one = true;\n                    if(!(actionFacts[j].arity === current_symbol.arity)){\n                        if(current_symbol.name)\n                        errors.push(current_symbol.name)\n                    }\n                }\n                else{\n                    continue;\n                }\n            }\n            if(!found_one){\n                diags.push(build_error_display(current_symbol.node, editor, \"Error: this action fact is never declared\"))\n            }\n        }\n        else if (current_symbol.declaration === DeclarationType.ActionF && current_symbol.context?.grammarType === 'simple_rule'){\n            actionFacts.push(current_symbol)\n        }\n        else{\n            continue;\n        }\n    }\n    for(let symbol of symbol_table.getSymbols()){\n        if(symbol.name)\n        if(errors.includes(symbol.name)){\n            diags.push(build_error_display(symbol.node, editor, \" Error : incoherent arity\"))\n        }\n    }\n    return diags\n}", "import { build_error_display , levenshteinDistance } from './utils';\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic , DiagnosticSeverity} from 'vscode-languageserver';\nimport { DeclarationType, TamarinSymbol} from \"../../symbol_table/tamarinTypes\";\n/* Function to check macros, functions, facts arity and to provide\n quick fixes for wrong function name still using leverstein distance */\n\nexport function check_function_macros_and_facts_arity(symbol_table : TamarinSymbolTable, editor: TextDocument): Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    let known_functions : TamarinSymbol[] = [];\n    let errors : string[] = []\n    function getNames(list : TamarinSymbol[]): string[]{\n        let str_list : string[] = [];\n        for(let symbol of list){\n            if(symbol.name){\n                str_list.push(symbol.name);\n            }\n        }\n        return str_list;\n    }\n    for( let i = 0; i < symbol_table.getSymbols().length; i++){\n        let current_symbol = symbol_table.getSymbol(i);\n        if(symbol_table.getSymbol(i).declaration === DeclarationType.LinearF || symbol_table.getSymbol(i).declaration === DeclarationType.PersistentF || symbol_table.getSymbol(i).declaration === DeclarationType.Functions || symbol_table.getSymbol(i).declaration === DeclarationType.NARY || symbol_table.getSymbol(i).declaration === DeclarationType.Macro){\n            if(current_symbol.name){\n                if(getNames(known_functions).includes(current_symbol.name)){\n                    for(let k = 0 ; k < known_functions.length; k ++){\n                        if(current_symbol.name === known_functions[k].name ){\n                            if(current_symbol.arity === known_functions[k].arity||current_symbol.arity ===0){\n                                break;\n                            }\n                            else{\n                                if(current_symbol.declaration === DeclarationType.NARY){\n                                    diags.push(build_error_display(current_symbol.node, editor, \"Error : incorrect arity for this function, \"+ known_functions[k].arity + \" arguments required\"))                                  \n                                }\n                                else if( current_symbol.declaration === DeclarationType.LinearF || current_symbol.declaration === DeclarationType.PersistentF){\n                                    errors.push(current_symbol.name);                                    \n                                    \n                                }\n                                else if (current_symbol.declaration === DeclarationType.Macro){\n                                    errors.push(current_symbol.name)\n                                }\n                            }\n                        }\n                        else{\n                            continue;\n                        }\n                    }\n                }\n                else{\n                    known_functions.push(current_symbol)\n                }\n            }\n        }\n    }\n    for(let symbol of symbol_table.getSymbols()){\n        if(symbol.name)\n        if(errors.includes(symbol.name)){\n            diags.push(build_error_display(symbol.node, editor, \" Error : incoherent arity\"))\n        }\n    }\n    for(let symbol of known_functions){\n        let isbreak = false;\n        if(symbol.declaration === DeclarationType.NARY){\n            for( let functionSymbol of known_functions){\n                if(functionSymbol.name === symbol.name && functionSymbol !== symbol){\n                    isbreak = true;\n                    break;\n                }\n            }\n            if(!isbreak){\n                diags.push(build_error_display(symbol.node, editor, \"Error : unknown function or macro\"));\n                for(let functionSymbol of known_functions){\n                    if (typeof symbol.name === 'string' && typeof functionSymbol.name === 'string'&& symbol.name !== functionSymbol.name && symbol.arity === functionSymbol.arity ) {\n                        const distance = levenshteinDistance(symbol.name, functionSymbol.name);\n                        if (distance < 3) { // threshold value\n                            const diagnostic: Diagnostic = {\n                                range: symbol.name_range,\n                                message: \"Warning: did you mean \" + functionSymbol.name + \" ? (\" + distance + \" characters away)\",\n                                severity: DiagnosticSeverity.Warning,\n                                source: \"tamarin\",\n                                code: \"wrongFunctionName\"\n                            };\n                            diags.push(diagnostic);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return diags\n}    ", "import Parser = require(\"web-tree-sitter\");\nimport { TamarinSymbolTable, set_associated_qf } from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic } from 'vscode-languageserver';\nimport { build_warning_display, get_child_grammar_type } from './utils';\nimport { DeclarationType, TamarinSymbol} from \"../../symbol_table/tamarinTypes\";\n\n/* Function used to check if a term is associated to a quantified formula in a lemma */ \nexport function check_free_term_in_lemma(symbol_table : TamarinSymbolTable, editor: TextDocument): Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    let lemma_vars : TamarinSymbol[] = [];\n    for (let symbol of symbol_table.getSymbols()){\n        if(symbol.declaration === DeclarationType.LemmaVariable || symbol.declaration === DeclarationType.RestrictionVariable){\n            lemma_vars.push(symbol);\n        }\n    }\n    for( let i = 0; i < lemma_vars.length; i++){\n        if(lemma_vars[i].node.parent?.grammarType === DeclarationType.QF){\n            set_associated_qf(lemma_vars[i], lemma_vars[i].node.parent)\n            continue;\n        }\n        let context = lemma_vars[i].context;\n        let globalisbreak = false;\n        while(context?.grammarType !== 'theory'){\n            let context_child_id: number[] = [];\n            if(context?.children){\n                let search_context = context\n                let gt_list = get_child_grammar_type(search_context)\n                while(search_context.child(0)?.grammarType === 'conjunction' || search_context.child(0)?.grammarType === 'disjunction' || gt_list.includes('imp') ){\n                    if(gt_list.includes('imp')){\n                    context_child_id.push((search_context.child(gt_list.indexOf('imp')) as {id:number}).id)\n                    search_context = search_context.child(gt_list.indexOf('imp')) as Parser.SyntaxNode\n                    gt_list = get_child_grammar_type(search_context);\n                    }\n                    else if(search_context.child(0)){\n                    context_child_id.push((search_context.child(0) as {id:number}).id)\n                    search_context = search_context.child(0) as Parser.SyntaxNode\n                    gt_list = get_child_grammar_type(search_context);\n                    } \n                }\n                // Simultaneously defining context for rename feature\n                if(search_context.grammarType === DeclarationType.Lemma || search_context.grammarType === DeclarationType.Restriction || search_context.grammarType === 'diff_lemma'){\n                    set_associated_qf(lemma_vars[i], search_context.child(4));\n                }\n                else if(search_context.grammarType === DeclarationType.NF){\n                    set_associated_qf(lemma_vars[i], search_context.child(1))\n                }\n                else{\n                    set_associated_qf(lemma_vars[i], search_context.child(0));\n                }\n            }\n            let isbreak = false ;\n            for (let j  = 0; j < lemma_vars.length; j++){\n                if((lemma_vars[j].context?.id === context?.id || context_child_id.includes((lemma_vars[j].context as {id : number}).id)) && lemma_vars[j].node.parent?.grammarType === DeclarationType.QF && lemma_vars[j].name === lemma_vars[i].name){\n                    isbreak = true;\n                    break;\n                }\n                \n            }\n            if(isbreak){\n                globalisbreak = true;\n                break;\n            }\n            else {\n                if(context?.parent){\n                    context = context?.parent\n                }\n            }\n        }\n        if(!globalisbreak){\n            diags.push(build_warning_display(lemma_vars[i].node, editor, \"Warning : free term in lemma or restriction formula\"))\n        }\n    }\n    return diags;\n}", "import {build_error_display} from './utils';\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic} from 'vscode-languageserver';\nimport { DeclarationType} from \"../../symbol_table/tamarinTypes\";\n\n\n\n/* Function to check that a macro is not used in an equation */ \nexport function check_macro_not_in_equation(symbol_table : TamarinSymbolTable, editor: TextDocument): Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    for(let symbol of symbol_table.getSymbols()){\n        if(symbol.declaration === DeclarationType.NARY){\n            for ( let macros of symbol_table.getSymbols()){\n                if(macros.declaration === DeclarationType.Macro && macros.name === symbol.name && symbol.context.grammarType === DeclarationType.Equation){\n                    diags.push(build_error_display(symbol.node, editor, \"Error : a macro shoud not be used in an equation \"))\n                }\n            }\n        }\n    }\n    return diags\n}", "import Parser = require(\"web-tree-sitter\");\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { getName } from './utils';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic , DiagnosticSeverity ,Range} from 'vscode-languageserver';\nimport { DeclarationType, TamarinSymbol} from \"../../symbol_table/tamarinTypes\";\n\n/* Given a symbol table returns all the builtins present in it */ \nfunction return_builtins(symbol_table: TamarinSymbolTable): TamarinSymbol[]{\nlet builtins : TamarinSymbol[]  = [];\n    for (let symbol of symbol_table.getSymbols()){\n        if(symbol.declaration === DeclarationType.Builtin){\n            builtins.push(symbol);\n        }\n    } \n    return builtins;\n}\n\n/* Given a list of builtins returns there name */\nfunction get_builtins_name(builtins : TamarinSymbol[]): string[]{\n    let Sbuiltins : string[] = [];\n    for (let builtin of builtins ){\n        if(builtin.name)\n        Sbuiltins.push(builtin.name)\n    }\n    return Sbuiltins;\n}\n\nfunction return_functions(symbol_table: TamarinSymbolTable): string[]{\n    let builtins : string[]  = [];\n        for (let symbol of symbol_table.getSymbols()){\n            if(symbol.declaration === DeclarationType.Functions && symbol.name){\n                builtins.push(symbol.name);\n            }\n        } \n        return builtins;\n    }\n\n/* Function used to check if the use of * ^ or others symbol is allowed, if not provides a quick fix to include the right builtin,\nAlso works with functions defined in builtins*/ \nexport function check_infix_operators(symbol_table : TamarinSymbolTable, editor : TextDocument, root : Parser.SyntaxNode): Diagnostic[]{\n    const diags : Diagnostic[] = [];\n    function display_infix_error(builtin: string, symbol: string, child: Parser.SyntaxNode): void {\n        let current_builtins = return_builtins(symbol_table);\n        let current_functions = return_functions(symbol_table)\n        if (!get_builtins_name(current_builtins).includes(builtin) && !current_functions.includes(getName(child.child(0), editor))) {\n            if(current_builtins.length > 0){\n            const diagnostic: Diagnostic = {\n                range: current_builtins[current_builtins.length - 1].name_range ,\n                message: \"Error : symbol \" + symbol + \" cannot be used without \" + builtin + \" builtin\",\n                severity: DiagnosticSeverity.Warning,\n                source: \"tamarin\",\n                code: \"missingBuiltin\"\n            };\n            diags.push(diagnostic);\n            }\n            else {\n                let theory = root ;\n                while (theory.grammarType !== 'theory'){\n                    if(theory.parent)\n                    theory = theory.parent\n                }\n                theory = theory.child(3) as Parser.SyntaxNode\n                const range = Range.create(\n                    editor.positionAt(theory.startIndex),\n                    editor.positionAt(theory.endIndex)\n                );\n            }  \n        }\n      }\n    for (let child of root.children){\n        if(child.grammarType === '^' || child.grammarType === '*'){\n            let current_builtins = return_builtins(symbol_table);\n            if(! get_builtins_name(current_builtins).includes('diffie-hellman')){\n                display_infix_error('diffie-hellman', '^ or *', child) \n                }\n        }\n        else if (child.grammarType === '\u2295'){\n            display_infix_error('xor','\u2295', child);;\n        }\n        else if (child.grammarType === '++'){\n            display_infix_error('multiset', '++', child);;\n        }\n        else if (child.grammarType === '%+'){\n            display_infix_error('natural-numbers', '%+', child);\n        }\n        else if (child.grammarType === DeclarationType.NARY){\n            if(getName(child.child(0),editor) === 'inv'){\n                display_infix_error('diffie-hellman', 'inv', child);\n            }\n            else if (getName(child.child(0),editor) === 'h'){\n                display_infix_error('hashing', 'h', child);\n            }\n            else if (getName(child.child(0), editor) === 'sdec' || getName(child.child(0), editor) === 'senc'){\n                display_infix_error('symmetric-encryption', 'sdec or senc' , child);\n            }\n            else if (getName(child.child(0), editor) === 'adec' || getName(child.child(0), editor) === 'aenc'){\n                display_infix_error('asymmetric-encryption', 'adec or aenc' , child);\n            }\n            else if (getName(child.child(0), editor) === 'sign' || getName(child.child(0), editor) === 'verify'){\n                display_infix_error('signing', 'sign or verify' , child);\n            }\n            else if (getName(child.child(0), editor) === 'revealSign' || getName(child.child(0), editor) === 'revealVerify' || getName(child.child(0), editor) === 'getMessage'){\n                display_infix_error('revealing-signing', 'revealSign or revealVerify or getMessage' , child);\n            }\n            else if (getName(child.child(0), editor) === 'pmult' || getName(child.child(0), editor) === 'em'){\n                display_infix_error('bilinear-pairing', 'pmult or em' , child);\n            }\n            else if (getName(child.child(0),editor) === 'XOR'){\n                display_infix_error('xor', 'XOR', child);  \n            }\n        }\n        else (check_infix_operators(symbol_table,editor,child));\n    }\n    return diags;\n}", "import { levenshteinDistance, build_error_display } from './utils';\nimport { TamarinSymbolTable} from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic , DiagnosticSeverity ,Range} from 'vscode-languageserver';\nimport { DeclarationType,TamarinSymbol} from \"../../symbol_table/tamarinTypes\";\n\n/* Function used to check the speling of facts, also provides a quick fix for the wrong ones using leverstein distance */\nexport function check_case_sensitivity(symbol_table : TamarinSymbolTable, editor:  TextDocument): Diagnostic[]{\n    const diags: Diagnostic[] = [];\n    const facts : TamarinSymbol[\"name\"][]  = [];\n    let count = 0;\n    for( let i = 0 ; i < symbol_table.getSymbols().length; i++){\n        let current_symbol = symbol_table.getSymbol(i);\n        if(current_symbol.declaration === DeclarationType.LinearF || current_symbol.declaration ===\n        DeclarationType.PersistentF ||  current_symbol.declaration === DeclarationType.ActionF ){\n            const name  = current_symbol.name;\n            if(name){\n                //Checks if fact name is correct -------\n                if(!(name.charCodeAt(0) >= 65  && name.charCodeAt(0) <= 90)){\n                    const newDiag = build_error_display(current_symbol.node, editor, \"Error: facts must start with an uppercase\")\n                    diags.push(newDiag);\n                }\n                if((current_symbol.declaration === DeclarationType.ActionF && current_symbol.context?.grammarType === 'simple_rule')){\n                    facts.push(current_symbol.name);\n                    continue;\n                }\n                if((current_symbol.declaration === DeclarationType.LinearF || current_symbol.declaration === DeclarationType.PersistentF) && current_symbol.node.parent?.grammarType === DeclarationType.Conclusion){\n                    facts.push(current_symbol.name)\n                    continue;\n                }\n                //---------\n                for( let j = 0; j < facts.length ; j++ ){\n                    const name2 = facts[j];\n                    if(name2){\n                        if(  name2 === name  && i !== j ){\n                            continue;\n                        }\n                        const distance = levenshteinDistance(name, name2);\n                        if (distance < 3 && !facts.includes(current_symbol.name)) { // threshold value\n                            const start = editor.positionAt(current_symbol.node.startIndex);\n                            const end = editor.positionAt(current_symbol.node.endIndex > current_symbol.node.startIndex ? current_symbol.node.endIndex : current_symbol.node.startIndex + 1);\n                            const diagnostic: Diagnostic = {\n                                range: Range.create(start, end),\n                                message: \"Warning: did you mean \" + name2 + \" ? (\" + distance + \" characters away)\",\n                                severity: DiagnosticSeverity.Warning,\n                                source: \"tamarin\",\n                                code: \"wrongFactName\"\n                            };\n                            diags.push(diagnostic);\n                            count ++\n                        }\n                    }\n                }\n            }\n        }\n        if(count > 0){break;}\n    };\n    return diags\n};", "import Parser = require(\"web-tree-sitter\");\nimport { TamarinSymbolTable } from '../../symbol_table/create_symbol_table';\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { Diagnostic } from 'vscode-languageserver';\nimport { check_variables_type_is_consistent_inside_a_rule } from './checkVariableTypes';\nimport { check_variable_is_defined_in_premise } from './checkVariableScope';\nimport { check_action_fact } from './checkActionFacts';\nimport { check_function_macros_and_facts_arity } from './checkArity';\nimport { check_free_term_in_lemma } from './checkFreeTerms';\nimport { check_macro_not_in_equation } from './checkMacrosInEquations';\nimport { check_infix_operators } from './checkInfixOperators';\nimport { check_case_sensitivity } from './checkSpelling';\n\n\nexport function checks_with_table(symbol_table : TamarinSymbolTable, document: TextDocument, root : Parser.SyntaxNode): Diagnostic[]{\n    const typeErrors = check_variables_type_is_consistent_inside_a_rule(symbol_table, document);\n    const premiseErrors = check_variable_is_defined_in_premise(symbol_table, document);\n    const actionFactErrors = check_action_fact(symbol_table, document);\n    const arityErrors = check_function_macros_and_facts_arity(symbol_table, document);\n    const freeTermWarnings = check_free_term_in_lemma(symbol_table, document);\n    const macroInEquationErrors = check_macro_not_in_equation(symbol_table, document);\n    const infixOperatorErrors = check_infix_operators(symbol_table, document, root);\n    const spellingWarnings = check_case_sensitivity(symbol_table, document);\n    const allDiagnostics = [\n        ...typeErrors,\n        ...premiseErrors,\n        ...actionFactErrors,\n        ...arityErrors,\n        ...freeTermWarnings,\n        ...macroInEquationErrors,\n        ...infixOperatorErrors,\n        ...spellingWarnings\n    ];\n    return allDiagnostics;\n};\n", "import { TextDocument } from \"vscode-languageserver-textdocument\";\nimport { detect_errors } from \"./features/syntax_errors\";   \nimport { Diagnostic ,Position, Location,WorkspaceEdit,TextEdit} from \"vscode-languageserver-types\";\nimport Parser =require( \"web-tree-sitter\");\nimport {TamarinSymbolTable,createSymbolTable} from \"./symbol_table/create_symbol_table\";\nimport { checks_with_table } from \"./features/checks/index\";\nimport { DeclarationType} from \"./symbol_table/tamarinTypes\";\nconst path = require('path');\n//TODO : REFACTORING\nexport class AnalysisManager{\n    private parser: Parser|undefined;\n    private symbolTable: Map<string, TamarinSymbolTable>;\n\n    constructor() {\n        this.symbolTable = new Map<string, TamarinSymbolTable>();\n    }\n\n    public async initParser(): Promise<void> {\n        await Parser.init();\n        this.parser = new Parser();\n        const parserPath = path.join(__dirname, 'tree-sitter-spthy.wasm');\n        const Tamarin = await Parser.Language.load(parserPath);\n        this.parser.setLanguage(Tamarin);\n        console.log(\"Parser initialized with Tamarin language.\");\n    }\n    //error and warning display\n    public async AnalyseDocument(document: TextDocument): Promise<Diagnostic[]> {\n        if (!this.parser) {\n            throw new Error(\"Parser not initialized\");\n        }\n        const tree =  this.parser.parse(document.getText());\n        const {diagnostics: syntaxDiagnostics } = await detect_errors(tree.rootNode,document);\n        const { symbolTable, diags: symbolTableChecks } = await createSymbolTable(tree.rootNode, document);\n        this.symbolTable.set(document.uri, symbolTable);\n        const wellformednessDiagnostics = await checks_with_table(symbolTable, document, tree.rootNode);\n        console.log(\"Symbol table created for:\", document.uri);\n        console.log(\"Number of symbols found:\", symbolTable.getSymbols().length);\n        console.log(\"Wellformedness diagnostics:\", wellformednessDiagnostics.length);\n        const allDiagnostics = [\n            ...syntaxDiagnostics,\n            ...wellformednessDiagnostics,\n            ...symbolTableChecks\n        ];\n        return allDiagnostics;\n    }\n    //goto\n    public getDefinition(document: TextDocument, position: Position): Location | null {\n        if(!this.parser) {\n            throw new Error(\"Parser not initialized\");\n            return null;\n        }\n        const table = this.symbolTable.get(document.uri);\n        if (!table) {\n            console.error(`No symbol table found for document: ${document.uri}`);\n            return null;\n        }\n        const tree= this.parser.parse(document.getText());\n        const point = {row: position.line, column: position.character};\n        const nodeAtcursor = tree.rootNode.descendantForPosition(point);\n        if (!nodeAtcursor) {\n            console.error(`No node found at position: ${point.row}, ${point.column}`);\n            return null;\n        }\n        const symbolName = nodeAtcursor.text;\n        console.error('[Server] Looking for symbol \"${symbolName}\" in symbol table.');\n        const symbol = table.getSymbols().find(sym => sym.name === symbolName);\n        if (symbol && symbol.name_range) {\n            console.error(`[Server] getDefinition: Found symbol definition for \"${symbol.name}\".`);\n            const location: Location = {\n                uri: document.uri,\n                range: symbol.name_range\n\n            };\n            return location\n        }\n        console.error(`[Server] getDefinition: Symbol \"${symbolName}\" not found in symbol table.`);\n        return null;\n\n    }\n\n    public handleDocumentClose(uri: string): void {\n        console.log(`Document closed: ${uri}. Cleaning up symbol table.`);\n        this.symbolTable.delete(uri);\n    }\n    //rename\n    public handleRenameRequest(document: TextDocument, position: Position, newName: string): WorkspaceEdit | null {\n        const table = this.symbolTable.get(document.uri);\n        if (!table) return null\n        if (!this.parser) {\n            throw new Error(\"Parser not initialized\");\n        }\n        const tree = this.parser.parse(document.getText());\n        const point = {row: position.line, column: position.character};\n        const nodeAtCursor = tree.rootNode.descendantForPosition(point);\n        if (!nodeAtCursor) {\n            console.error(`No node found at position: ${point.row}, ${point.column}`);\n            return null;\n        }\n        const oldname= tree.rootNode.namedDescendantForPosition(point).text;\n        console.error(oldname);\n        const originalSymbol = table.getSymbols().find(symbol => \n            symbol.name === oldname && \n            symbol.name_range && \n            symbol.name_range.start.line === position.line && \n            symbol.name_range.start.character === position.character\n        );\n        console.error(`[Server] handleRenameRequest: Looking for symbol at position ${position.line}:${position.character}.`);\n        console.error(`[Server] handleRenameRequest: Original symbol found: ${originalSymbol ? originalSymbol.name : 'none'}.`);\n        if (!originalSymbol) return null;\n        const edits: TextEdit[] = [];\n        const chosenSymbolName = originalSymbol.name;\n        for (const symbol of table.getSymbols()) {\n            console.error(symbol.name)\n            let shouldRename=false;\n            if (symbol.declaration === DeclarationType.PRVariable ||\n                symbol.declaration === DeclarationType.ActionFVariable ||\n                symbol.declaration === DeclarationType.CCLVariable\n            ){\n                if (originalSymbol.context === symbol.context && chosenSymbolName === symbol.name) {\n                    shouldRename = true;\n                }\n            }\n            else if( symbol.declaration === DeclarationType.LemmaVariable){\n                if (symbol.associated_qf?.id === originalSymbol.associated_qf?.id && symbol.name === chosenSymbolName) {\n                    shouldRename = true;\n                }\n            }\n            else if (symbol.declaration === DeclarationType.LEquationVariable || \n                     symbol.declaration === DeclarationType.REquationVariable ||\n                     symbol.declaration === DeclarationType.LMacroVariable ||\n                     symbol.declaration === DeclarationType.RMacroVariable) {\n                if (originalSymbol.context.id === symbol.context.id && chosenSymbolName === symbol.name) {\n                    shouldRename = true;\n                }\n            }\n            else if (symbol.name === chosenSymbolName && symbol.declaration === originalSymbol.declaration) { \n                shouldRename = true;\n            }\n            console.error(shouldRename)\n            if (shouldRename) {\n                if (symbol.name_range) {\n                    edits.push(TextEdit.replace(symbol.name_range, newName));\n                }\n            }\n        }\n        console.error(edits)\n        if (edits.length === 0){\n            return null;\n        }\n        const workspaceEdit: WorkspaceEdit = {\n            changes: {\n                [document.uri]: edits\n            }\n        };\n        return workspaceEdit;\n    }\n    \n}\n"],
  "mappings": "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",
  "names": ["e", "t", "_", "s", "r", "a", "o", "n", "l", "import_vscode_languageserver", "Parser", "document", "start", "i", "Parser", "i", "document", "start", "DocumentUri", "URI", "integer", "uinteger", "Position", "Range", "Location", "LocationLink", "Color", "ColorInformation", "ColorPresentation", "FoldingRangeKind", "FoldingRange", "DiagnosticRelatedInformation", "DiagnosticSeverity", "DiagnosticTag", "CodeDescription", "Diagnostic", "Command", "args", "TextEdit", "ChangeAnnotation", "ChangeAnnotationIdentifier", "AnnotatedTextEdit", "TextDocumentEdit", "CreateFile", "RenameFile", "DeleteFile", "WorkspaceEdit", "TextDocumentIdentifier", "VersionedTextDocumentIdentifier", "OptionalVersionedTextDocumentIdentifier", "TextDocumentItem", "MarkupKind", "MarkupContent", "CompletionItemKind", "InsertTextFormat", "CompletionItemTag", "InsertReplaceEdit", "Range", "InsertTextMode", "CompletionItemLabelDetails", "CompletionItem", "CompletionList", "MarkedString", "Hover", "ParameterInformation", "SignatureInformation", "DocumentHighlightKind", "DocumentHighlight", "SymbolKind", "SymbolTag", "SymbolInformation", "name", "WorkspaceSymbol", "DocumentSymbol", "CodeActionKind", "CodeActionTriggerKind", "CodeActionContext", "Diagnostic", "CodeAction", "CodeLens", "FormattingOptions", "DocumentLink", "SelectionRange", "SemanticTokenTypes", "SemanticTokenModifiers", "SemanticTokens", "InlineValueText", "InlineValueVariableLookup", "InlineValueEvaluatableExpression", "InlineValueContext", "InlayHintKind", "InlayHintLabelPart", "InlayHint", "Position", "StringValue", "InlineCompletionItem", "InlineCompletionList", "InlineCompletionTriggerKind", "SelectedCompletionInfo", "InlineCompletionContext", "WorkspaceFolder", "TextDocument", "document", "i", "start", "Position", "Is", "undefined", "integer", "uinteger", "func", "Parser", "Parser", "arity", "Parser", "Parser", "document", "i", "arity", "args", "name", "document", "name", "i", "i", "i", "import_vscode_languageserver", "i", "Parser", "i", "import_vscode_languageserver", "Parser", "import_vscode_languageserver", "i", "name", "name2", "start", "Parser", "document", "Parser", "document", "document"]
}
